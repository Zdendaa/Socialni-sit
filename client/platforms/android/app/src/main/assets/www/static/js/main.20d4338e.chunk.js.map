{"version":3,"sources":["context/Reducer.js","context/GlobalState.js","firebaseStorage/storage.js","changePath.js","components/ButtonGoogleLogIn.jsx","pages/Register.jsx","components/SharingButton.jsx","components/UserProfile.jsx","components/SearchBar.jsx","components/MessengerIcon.jsx","components/TopBarHome.jsx","components/SwiperOnlineFriends.jsx","storageImgActions/imgFunctions.js","components/addMessageVariants/EmojiPicker.jsx","components/addMessageVariants/PhotoMessage.jsx","components/addMessageVariants/VideoMessage.jsx","components/AddNewPost.jsx","format.jsCZ/CzFormat.jsx","components/Comment.jsx","components/Comments.jsx","components/global/PopupWindown.jsx","components/Share.jsx","components/Post.jsx","components/Notifications.jsx","components/Story.jsx","components/UploadControl.jsx","components/global/CropperImage.jsx","components/AddStory.jsx","components/StoriesBook.jsx","components/StoriesMain.jsx","pages/Home.jsx","pages/Login.jsx","components/ButtonForActionsFriend.jsx","components/TopProfile.jsx","components/ProfileRequests.jsx","components/ImagesOfUser.jsx","components/UserInfo.jsx","pages/Profile.jsx","components/ColorsPicker.jsx","components/ChangeColors.jsx","components/ChangeCoverImg.jsx","components/ChangeProfileImg.jsx","components/SetUserInfo.jsx","pages/ProfileSettings.jsx","components/Message.jsx","components/addMessageVariants/VoiceMessage.jsx","components/Chat.jsx","components/UserChat.jsx","pages/Messenger.jsx","App.jsx","index.js"],"names":["Reducer","state","action","type","user","payload","idOrUrlOfProfilePicture","idOrUrlOfCoverPicture","backgroundColor1","backgroundColor2","backgroundColor3","backgroundColor4","onlineFriends","socket","numberOfNewMessages","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","setUser","data","deleteUser","changeProfileImg","changeCoverImg","setColors","setOnlineFriends","setSocket","setNumberOfNewMessages","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","changePath","path","ButtonGoogleLogIn","useContext","history","useHistory","createUserGoogle","a","googleProvider","auth","GoogleAuthProvider","signInWithPopup","then","userData","email","password","isGoogleAccount","axios","post","newUser","get","_id","ifExistUserColors","setItem","stringify","saveUser","url","photoURL","username","displayName","catch","err","console","log","newUserData","push","onClick","className","Register","useState","ifWaiting","setIfWaiting","errName","setErrName","errPassword","setErrPassword","errPasswordConfirm","setErrPasswordConfirm","errEmail","setErrEmail","userExist","setUserExist","passwordValue","setpasswordValue","passwordConfirmValue","setPasswordConfirmValue","name","useRef","checkInput","what","setRight","validator","isEmail","passwordConfirm","createUser","current","setAndSaveUser","style","backgroundColor","color","onChange","e","target","ref","placeholder","required","size","to","SharingButton","addSharedPost","idOfUser","idOfPost","ifIsShare","setIfIsShare","idOfSharedPost","setIdOfSharedPost","ifLoading","setIfLoading","useEffect","ifAlreadyShare","postData","userId","idOfSharingToUser","idOfMainPost","sharedPost","addOrRemovePost","UserProfile","friends","unReaded","mobile","sharing","sharingPost","createdAt","currentUser","setCurrentUser","isOnline","setIsOnline","getUrlAndCurrentUser","some","friend","currentUserData","filter","onlineUser","display","alignItems","justifyContent","marginTop","flexDirection","src","alt","referrerPolicy","border","format","SearchBar","isTyping","setIsTyping","users","setUsers","searchUsers","newUsers","width","map","margin","height","borderRadius","objectFit","MessengerIcon","number","setNumber","getNumberOfNewMessages","myId","on","idOfCurrentChat","window","location","href","split","idOfChat","prev","textDecoration","marginLeft","position","TopBarHome","borderBottom","cursor","removeItem","disconnect","fontSize","SwiperCore","use","Pagination","SwiperOnlineFriends","classBorderRadius","slidesPerView","spaceBetween","pagination","uploadImg","image","put","downloadUrlImg","getDownloadURL","EmojiPicker","setValOfText","setChosenEmoji","isOpen","setIsOpen","onEmojiClick","event","emojiObject","val","emoji","PhotoMessage","setPhotoFile","setImage","onUpload","file","htmlFor","id","accept","files","hidden","VideoMessage","setVideoFile","setFile","AddNewPost","typeOfUrl","setTypeOfUrl","desc","setDesc","errorMessages","setErrorMessages","valueUrlInput","setValueUrlInput","loading","setLoading","whatTypeIsFile","validation","createPost","newFile","newFileName","Math","floor","Date","now","urlOfFile","setDataOfPost","img","newPost","urlOfImg","isURL","urlOfVideo","dataOfNewPost","length","reload","forEach","index","sendNotification","recieverId","text","senderId","newNotificatons","emit","readed","valLowerCase","toLowerCase","includes","URL","createObjectURL","controls","czDataFormat","totalSec","Comment","comment","addComment","commentMain","show","setShow","valueOfInput","setValueOfInput","userOfComment","setUserOfComment","idOfLikes","ifIsLiked","setIfIsLiked","lenghtOfLikes","setLenghtOfLikes","setifLoading","nestedComments","comment1","getUserOfComment","userOfCommnent","addOrRemoveLike","lenght","marginRight","Comments","comments","setComments","allComments","setAllComments","getAllComments","newComments","commentList","sort","p1","p2","commentMap","idOfparentComment","parent","nestComments","setifLoadingValue","newComment","PopupWindown","classNameMain","classNameContainer","setVisible","motion","div","initial","scale","opacity","animate","exit","transition","duration","Share","setifSharing","allFriends","setAllFriends","valOfInput","setValOfInput","loadAllUsersFriends","Post","userOfPost","register","ifSharing","mainUserOfPost","setMainUserOfPost","getUser","share","sharedUserId","marginBottom","sharedDesc","newPicture","sharedPostCreatedAt","autoPlay","AnimatePresence","exitBeforeEnter","onExitComplete","Notifications","notifications","setNotifications","numberOfNewNotifications","setNumberOfNewNotifications","showNotifications","setShowNotifications","showPost","setShowPost","dataOfPost","setFriends","setAllNotifications","allNotifications","notification","sortNotificationsByDate","setNotificationsNewData","fetchAllFriends","dataOfFriends","date","getAndShowPost","idOfNotification","currentPost","setReadedToTrue","link","currentNotification","Story","story","setIsOpenAddStory","setIdOfCurrentOpenStory","setIsVisibleStoriesBook","userOfStory","setUserOfStory","fetchDataOfUser","dataOfUser","padding","UploadControl","setUrlImage","setNoError","addStory","CropperImage","aspect","rect","saveImg","setCropImg","setVideo","video","crop","setCrop","urlImage","isLoading","setIsLoading","noError","getFrinends","getCroppedImg","onlyCrop","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","pixelRatio","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","base64Image","toDataURL","toBlob","blob","addVideo","onImageLoaded","newCrop","minWidth","maxWidth","minHeight","maxHeight","circularCrop","AddStory","cropImg","valueOfPlace","setValueOfPlace","getNewCroppedPicture","addNewStory","newStory","dataOfNewStory","Promise","selected","loop","StoriesBook","idOfCurrentOpenStory","allStories","findIndex","storie","indexOfStory","setIndexOfStory","rotate","StoriesMain","setAllStories","setWidth","carouselMain","isOpenAddStory","isVisibleStoriesBook","usersOfStory","setUsersOfStory","fetchAllStories","stories","usersIdData","uniqueUsersIdData","Set","usersIdPostData","scrollWidth","offsetWidth","whiletap","drag","dragConstraints","right","left","Home","posts","setPosts","usersIdOfPost","setUsersIdOfPost","getPosts","sortPosts","Login","wrongPasswordOrEmail","setWrongPasswordOrEmail","logIn","ButtonForActionsFriend","removeFriend","ifAreFriends","myUser","addOrRemoveRequestToUser","ifSendRequest","confirmRequest","idOfRequests","TopProfile","urlOfProfileImg","urlOfCoverImg","ProfileRequests","ImagesOfUser","urlOfImages","setUrlOfImages","openPopupWidnown","setOpenPopupWidnown","urlOfChoseImg","setUrlOfChoseImg","getUrlOfImages","idOfAllPicture","idOfImage","dataOfImage","openPopupWindownImg","UserInfo","info","setInfo","getInfoAboutUser","newInfo","fontWeight","from","relationShip","Profile","useParams","setMyUser","setUrlOfProfileImg","setUrlOfCoverImg","setIfAreFriends","setIfSendRequtest","arrayIdOfFriends","setArrayIdOfFriends","allPosts","setAllPosts","downloadUrl","downloadDataOfUser","setValueOfVariables","downloadUsers","idOfFriends","getAllPosts","newAllFriends","myUserId","userOfRequest","idOfrequests","ColorsPicker","setColor","setNoErrorDefaultButton","ChangeColors","color1","setColor1","color2","setColor2","color3","setColor3","color4","setColor4","isLoadingDefaultButton","setIsLoadingDefaultButton","noErrorDefaultButton","changeColors","changeToDefault","userColors","delete","updateValueOfColors","ChangeCoverImg","newImgName","addNewPhoto","oldPhoto","idOfImg","imgUrl","userString","userObject","ChangeProfileImg","SetUserInfo","infoData","setInfoData","getInfo","saveNewInfo","ifInfoExist","dataInfo","changeInput","ProfileSettings","Message","message","userOfChat","idOfReadedMessage","setDate","idOfSender","onDoubleClick","urlOfVoice","textAlign","getTime","getDate","getMonth","getHours","getMinutes","VoiceMessage","setUrlOfVoice","recordState","setRecordState","onStop","audioData","RecordState","STOP","START","Chat","setChats","chats","error","setError","messages","setMessages","idOfLastReadedMessage","setIdOfLastReadedMessage","valOfText","voiceFile","setVoiceFile","videoFile","photoFile","getMessages","DataOfMessages","idOfReciever","sortMessagesByDate","idOfMessage","readedMessages","newData","addMessage","uploadFileMessage","voiceName","voiceUrl","photoName","photoUrl","videoName","videoUrl","newChat","usersId","lastMessage","lastMessageTime","lastIdOfUser","newMessage","updateChats","newChats","chat","scrollToDown","getElementsByClassName","scrollTop","scrollHeight","typeOf","newFileMessageName","onKeyPress","key","UserChat","idOfActiveChat","setUserOfChat","currentChat","setcurrentChat","numberUnReadedMessages","setNumberUnReadedMessages","getNewMessages","numberMessages","chatData","item","goToChat","updateChatReadedTrue","slice","Messenger","searchChats","setsearchChats","idOfChat2","setIdOfChat2","sortChats","chatsData","usersIdChatData","getCurrentUser","findUsers","newArrayOfChat","searchChat","App","io","exact","startApp","ReactDOM","render","StrictMode","getElementById","cordova","addEventListener"],"mappings":"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","file":"static/js/main.20d4338e.chunk.js","sourcesContent":["const Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        case \"DELETE_USER\":\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case \"CHANGE_PROFILE_IMG\":\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    idOrUrlOfProfilePicture: action.payload\r\n                }\r\n            }\r\n        case \"CHANGE_COVER_IMG\":\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    idOrUrlOfCoverPicture: action.payload\r\n                }\r\n            }\r\n        case \"SET_COLORS\":\r\n            return {\r\n                ...state,\r\n                backgroundColor1: action.payload.backgroundColor1,\r\n                backgroundColor2: action.payload.backgroundColor2,\r\n                backgroundColor3: action.payload.backgroundColor3,\r\n                backgroundColor4: action.payload.backgroundColor4\r\n            }\r\n        case \"SET_ONLINE_FRIENDS\":\r\n            return {\r\n                ...state,\r\n                onlineFriends: action.payload\r\n            }\r\n        case \"SET_SOCKET\":\r\n            return {\r\n                ...state,\r\n                socket: action.payload\r\n            }\r\n        case \"SET_NUMBER_UNREADED_MESSAGES\":\r\n            return {\r\n                ...state,\r\n                numberOfNewMessages: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default Reducer","import React, { createContext, useReducer } from 'react'\r\nimport Reducer from \"./Reducer\"\r\n\r\n// initial state zde bude ulozeny uzivatel aby jsem mohl jeho data pouzivat ve vsech komponentach\r\nconst initialState = {\r\n    user: localStorage.getItem(\"user\") && JSON.parse(localStorage.getItem(\"user\")), // do user se ulozi json promenna user z local storagu\r\n    backgroundColor1: localStorage.getItem(\"colors\") ? JSON.parse(localStorage.getItem(\"colors\")).backgroundColor1 : \"#D88100\", // hlavni barva\r\n    backgroundColor2: localStorage.getItem(\"colors\") ? JSON.parse(localStorage.getItem(\"colors\")).backgroundColor2 : \"#F4F4F4\", // sekundarni barva\r\n    backgroundColor3: localStorage.getItem(\"colors\") ? JSON.parse(localStorage.getItem(\"colors\")).backgroundColor3 : \"black\", // barva pro cerny text\r\n    backgroundColor4: localStorage.getItem(\"colors\") ? JSON.parse(localStorage.getItem(\"colors\")).backgroundColor4 : \"#ffffff\", // barva pro bily text\r\n    onlineFriends: null,\r\n    socket: null,\r\n    numberOfNewMessages: null\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n    // akce ktere muzu volat\r\n\r\n    // registrovani uzivatele\r\n    function setUser(data) {\r\n        dispatch({\r\n            type: 'SET_USER',\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    // odhlaseni uzivatele\r\n    function deleteUser() {\r\n        dispatch({\r\n            type: 'DELETE_USER',\r\n        })\r\n    }\r\n\r\n    // zmena profilove fotky\r\n    function changeProfileImg(data) {\r\n        dispatch({\r\n            type: 'CHANGE_PROFILE_IMG',\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    // zmena profilove fotky\r\n    function changeCoverImg(data) {\r\n        dispatch({\r\n            type: 'CHANGE_COVER_IMG',\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    // nastaveni barev\r\n    function setColors(data) {\r\n        dispatch({\r\n            type: 'SET_COLORS',\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    // nastaveni online pratel\r\n    function setOnlineFriends(data) {\r\n        dispatch({\r\n            type: 'SET_ONLINE_FRIENDS',\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    // nastaveni socketu uzivatele\r\n    function setSocket(data) {\r\n        dispatch({\r\n            type: 'SET_SOCKET',\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    // nastaveni socketu uzivatele\r\n    function setNumberOfNewMessages(data) {\r\n        dispatch({\r\n            type: 'SET_NUMBER_UNREADED_MESSAGES',\r\n            payload: data\r\n        })\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            user: state.user,\r\n            backgroundColor1: state.backgroundColor1,\r\n            backgroundColor2: state.backgroundColor2,\r\n            backgroundColor3: state.backgroundColor3,\r\n            backgroundColor4: state.backgroundColor4,\r\n            onlineFriends: state.onlineFriends,\r\n            socket: state.socket,\r\n            numberOfNewMessages: state.numberOfNewMessages,\r\n            setUser,\r\n            deleteUser,\r\n            changeProfileImg,\r\n            changeCoverImg,\r\n            setColors,\r\n            setOnlineFriends,\r\n            setSocket,\r\n            setNumberOfNewMessages\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","import firebase from 'firebase/app'\r\n\r\nimport \"firebase/storage\"\r\nimport \"firebase/auth\";\r\n\r\n// pripojeni k firebase \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAAoZQnJBdS-cewGfaahvtFo4yCht1UI2I\",\r\n    authDomain: \"socialapp-74542.firebaseapp.com\",\r\n    projectId: \"socialapp-74542\",\r\n    storageBucket: \"socialapp-74542.appspot.com\",\r\n    messagingSenderId: \"893529540261\",\r\n    appId: \"1:893529540261:web:ebc3daabc0e1462ecfef4c\",\r\n    measurementId: \"G-311G3G7JMT\"\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n// vytvoreni uloziste s kterym muzeme pracovat\r\nvar storage = firebase.storage();\r\n\r\nexport { firebase, storage };\r\n","const changePath = (path) => {\r\n    return path + \"\"; // tato funkce slouzi k zmene cesty\r\n}\r\n\r\nexport default changePath;","import axios from 'axios';\r\nimport React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { firebase } from '../firebaseStorage/storage'\r\nimport { useHistory } from 'react-router'\r\nimport changePath from '../changePath';\r\nimport { FcGoogle } from 'react-icons/fc';\r\n\r\nconst ButtonGoogleLogIn = () => {\r\n    const { setUser, setColors } = useContext(GlobalContext);\r\n\r\n    // useHistory ( pouziva se k presmerovani stranky)\r\n    const history = useHistory();\r\n\r\n    const createUserGoogle = async () => {\r\n\r\n        var googleProvider = new firebase.auth.GoogleAuthProvider();\r\n        await firebase.auth().signInWithPopup(googleProvider).then(async (data) => {\r\n\r\n            try {\r\n                // jestli uzivatel uz existuje jenom ho prihlasime\r\n                const userData = {\r\n                    email: data.user.email,\r\n                    password: null,\r\n                    isGoogleAccount: true\r\n                }\r\n                const newUser = await axios.post(changePath(\"/users/login\"), userData);\r\n\r\n                // zjisteni zda existuje UserColors\r\n                const ifExistUserColors = await axios.get(changePath(`userColors/ifUserColorsExist/${newUser.data._id}`))\r\n                // jestli existuej tak ulozime do local storage a take do context api barvy uzivatele\r\n                if (ifExistUserColors.data) {\r\n                    localStorage.setItem(\"colors\", JSON.stringify({ backgroundColor1: ifExistUserColors.data.backgroundColor1, backgroundColor2: ifExistUserColors.data.backgroundColor2, backgroundColor3: ifExistUserColors.data.backgroundColor3, backgroundColor4: ifExistUserColors.data.backgroundColor4 }));\r\n                    setColors({ backgroundColor1: ifExistUserColors.data.backgroundColor1, backgroundColor2: ifExistUserColors.data.backgroundColor2, backgroundColor3: ifExistUserColors.data.backgroundColor3, backgroundColor4: ifExistUserColors.data.backgroundColor4 });\r\n                }\r\n\r\n                saveUser(newUser);\r\n            } catch (err) {\r\n                // jestli uzivatel neexistuje registrujeme ho a vytvroime zaznam v tabulce images\r\n                await axios.post(changePath(\"/images/createNew\"), { url: data.user.photoURL });\r\n                // vytvoreni zaznamu v tabulkce users\r\n                const newUser = {\r\n                    username: data.user.displayName,\r\n                    email: data.user.email,\r\n                    password: null,\r\n                    idOrUrlOfProfilePicture: data.user.photoURL,\r\n                    isGoogleAccount: true\r\n                }\r\n\r\n                // vytvoreni zaznamu v tabulkce users\r\n                const userData = await axios.post(changePath(\"/users/register\"), newUser);\r\n                saveUser(userData);\r\n            }\r\n        })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const saveUser = (userData) => {\r\n        const newUserData = userData.data;\r\n        // ulozeni uzivatele do local storage aby uzivatel byl ulozeny i po refreshnuti stranky\r\n        localStorage.setItem(\"user\", JSON.stringify(newUserData));\r\n\r\n        // volani funkce v GlobalProvider a ulozeni uzivatele do initialState\r\n        setUser(newUserData);\r\n\r\n        // presmerovani na stranku home\r\n        history.push(\"/\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <button onClick={createUserGoogle} className=\"createGoogleButton inputRegister buttonRegister\">\r\n                <FcGoogle className=\"googleImg\" />\r\n                <span>Pokračovat skrze google účet</span>\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonGoogleLogIn\r\n","import React, { useContext, useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport axios from 'axios'\r\nimport ButtonGoogleLogIn from '../components/ButtonGoogleLogIn';\r\nimport { Link } from 'react-router-dom'\r\nimport changePath from '../changePath';\r\nimport { AiOutlineArrowRight } from 'react-icons/ai';\r\nimport validator from 'validator';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Register = () => {\r\n    // vypujceni promenne user a funkce setUser z context api\r\n    const { setUser, backgroundColor1, backgroundColor2 } = useContext(GlobalContext);\r\n\r\n    // useState promenne\r\n    // promenna useState jesli se nacita stranka\r\n    const [ifWaiting, setIfWaiting] = useState(false);\r\n\r\n    // promenne useState pro chybove hlasky\r\n    const [errName, setErrName] = useState(\"\");\r\n    const [errPassword, setErrPassword] = useState(\"\");\r\n    const [errPasswordConfirm, setErrPasswordConfirm] = useState(\"\");\r\n    const [errEmail, setErrEmail] = useState(\"\");\r\n    const [userExist, setUserExist] = useState(\"\");\r\n\r\n    // promenne useState pro porovnani s potvrzenym heslem\r\n    const [passwordValue, setpasswordValue] = useState(\"\");\r\n    const [passwordConfirmValue, setPasswordConfirmValue] = useState(\"\");\r\n\r\n    // useRef promenne\r\n    const name = useRef(null);\r\n    const password = useRef(null);\r\n    const email = useRef(null);\r\n\r\n    // useHistory ( pouziva se k presmerovani stranky)\r\n    const history = useHistory();\r\n\r\n\r\n    // funkce\r\n\r\n    // zkontrolovani dat ve formulari a ulozeni chybove hlasky\r\n    const checkInput = async (what, value) => {\r\n        // what 1 name   2 password    3 passwordConfirm    4 email\r\n        what === 1 && (value !== \"\" ? setErrName(null) : setErrName(\"Jméno je povinné\"));\r\n        what === 2 && (value !== \"\" ? (value === passwordConfirmValue ? setRight(true, true) : setRight(true, false)) : setErrPassword(\"Heslo je povinné\"));\r\n        what === 3 && (value !== \"\" ? (value === passwordValue ? setErrPasswordConfirm(null) : setErrPasswordConfirm(\"Potvrzení hesla musí být stejné jako heslo\")) : setErrPasswordConfirm(\"Potvrzení hesla je povinné\"));\r\n        what === 4 && (value !== \"\" ? (validator.isEmail(value) ? setErrEmail(null) : setErrEmail(\"neplatný email\")) : setErrEmail(\"email je povinný\"));\r\n    }\r\n\r\n    const setRight = (password, passwordConfirm) => {\r\n        password && setErrPassword(null);\r\n        passwordConfirm ? setErrPasswordConfirm(null) : setErrPasswordConfirm(\"Potvrzení hesla musí být stejné jako heslo\");\r\n    }\r\n\r\n    // vytvoreni uzivatele\r\n    const createUser = async () => {\r\n        // zjisteni jestli data ve formulari jsou sparvna \r\n        const isItRight = ((!errEmail && !errPassword && !errPasswordConfirm && !errName) && (errEmail !== \"\" && errPassword !== \"\" && !errPasswordConfirm !== \"\" && !errName !== \"\")) ? true : false;\r\n\r\n        // jeslit jsou data spravna pokracujeme v prihlaseni\r\n        if (isItRight) {\r\n            // nacitani nastavime na true\r\n            setIfWaiting(true);\r\n\r\n            // zjisitme zda li uzivatel jiz neexistuje se stejnym jmenem nebo emailem\r\n            const ifUserExist = await axios.post(changePath(\"/users/ifUserExist\"), { username: name.current.value, email: email.current.value })\r\n\r\n            if (ifUserExist.data) {\r\n                // uzivatel jiz existuje \r\n                setUserExist(\"uživatel již existuje s tímto jménem nebo emailem\");\r\n                setIfWaiting(false);\r\n            } else {\r\n                try {\r\n                    await setAndSaveUser();\r\n                } catch (err) {\r\n                    // jestli se nepodari prihlasit uzivatele nastavime nacitani na false \r\n                    setIfWaiting(false);\r\n                }\r\n            }\r\n        } else {\r\n            // jeslit uzivatel nezadal zadna data vyhodime chybouve hlasky\r\n            errName === \"\" && checkInput(1, \"\");\r\n            errPassword === \"\" && checkInput(2, \"\");\r\n            errPasswordConfirm === \"\" && checkInput(3, \"\");\r\n            errEmail === \"\" && checkInput(4, \"\");\r\n        }\r\n    }\r\n\r\n    const setAndSaveUser = async () => {\r\n        const newUser = {\r\n            username: name.current.value,\r\n            email: email.current.value,\r\n            password: password.current.value,\r\n            isGoogleAccount: false,\r\n        }\r\n\r\n        // vytvoreni zaznamu v tabulkce users\r\n        const userData = await axios.post(changePath(\"/users/register\"), newUser);\r\n        const newUserData = userData.data;\r\n\r\n        // ulozeni uzivatele do local storage aby uzivatel byl ulozeny i po refreshnuti stranky\r\n        localStorage.setItem(\"user\", JSON.stringify(newUserData));\r\n\r\n        // volani funkce v GlobalProvider a ulozeni uzivatele do initialState\r\n        setUser(newUserData);\r\n\r\n        // presmerovani na stranku home\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"Register\">\r\n            <div className=\"registerContainer\">\r\n                <div className=\"rotateDiv1\" style={{ backgroundColor: backgroundColor1 }}></div>\r\n                <div className=\"rotateDiv2\" style={{ backgroundColor: backgroundColor1 }}></div>\r\n                <div className=\"registerForm\">\r\n                    <h2 style={{ color: backgroundColor1 }}>Registrace</h2>\r\n                    <input className=\"inputRegister\" onChange={(e) => checkInput(1, e.target.value)} style={{ backgroundColor: backgroundColor2, color: backgroundColor1 }} type=\"name\" ref={name} placeholder=\"jméno\" required />\r\n                    {(errName !== \"\" && errName) && <span className=\"errorMessage\">{errName}</span>}\r\n                    <input className=\"inputRegister\" onChange={(e) => checkInput(4, e.target.value)} style={{ backgroundColor: backgroundColor2, color: backgroundColor1 }} type=\"email\" ref={email} placeholder=\"email\" required />\r\n                    {(errEmail !== \"\" && errEmail) && <span className=\"errorMessage\">{errEmail}</span>}\r\n                    <input className=\"inputRegister\" onChange={(e) => { checkInput(2, e.target.value); setpasswordValue(e.target.value); }} style={{ backgroundColor: backgroundColor2, color: backgroundColor1 }} type=\"password\" ref={password} placeholder=\"heslo\" required />\r\n                    {(errPassword !== \"\" && errPassword) && <span className=\"errorMessage\">{errPassword}</span>}\r\n                    <input className=\"inputRegister\" onChange={(e) => { checkInput(3, e.target.value); setPasswordConfirmValue(e.target.value); }} style={{ backgroundColor: backgroundColor2, color: backgroundColor1 }} type=\"password\" placeholder=\"potrvdit heslo\" required />\r\n                    {(errPasswordConfirm !== \"\" && errPasswordConfirm) && <span className=\"errorMessage\">{errPasswordConfirm}</span>}\r\n                    {(userExist !== \"\" && userExist) && <span className=\"errorMessage\">{userExist}</span>}\r\n                    <button className=\"buttonRegister inputRegister\" style={{ backgroundColor: backgroundColor1, color: \"white\" }} onClick={createUser}>{!ifWaiting ? <span>Registrovat</span> : <ClipLoader color={backgroundColor2} size={10} />}</button>\r\n                    <span>nebo</span>\r\n                    <ButtonGoogleLogIn />\r\n                    <Link to=\"/login\" className=\"goToLogInButton inputRegister\" style={{ backgroundColor: backgroundColor1 }}>{!ifWaiting ? <><span>Příhlásit se</span> <AiOutlineArrowRight className=\"ArrowImg\" /></> : <ClipLoader color={backgroundColor2} size={10} />}</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst SharingButton = ({addSharedPost, idOfUser, idOfPost }) => {\r\n    const {backgroundColor4, backgroundColor1, user} = useContext(GlobalContext);\r\n\r\n    // promenna zda li uz uzivatel sdilel prispevek tomuto uzivateli\r\n    const [ifIsShare, setIfIsShare] = useState(false);\r\n\r\n    // prmenna pro id sdileneho postu jestli jiz existuje\r\n    const [idOfSharedPost, setIdOfSharedPost] = useState(null);\r\n\r\n    // waiting\r\n    const [ifLoading, setIfLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ifAlreadyShare();\r\n    }, [])\r\n\r\n    // funkce\r\n    const ifAlreadyShare = async () => {\r\n        const postData = {\r\n            userId: user._id,\r\n            idOfSharingToUser: idOfUser,\r\n            idOfMainPost: idOfPost\r\n        }\r\n\r\n        const sharedPost = await axios.post(changePath(\"/sharedPosts/ifAlreadyShared\"), postData);\r\n       \r\n        setIdOfSharedPost(sharedPost.data ? sharedPost.data._id : null);\r\n        setIfIsShare(sharedPost.data ? true : false);\r\n    }\r\n    const addOrRemovePost = async () => {\r\n        setIfLoading(true)\r\n        await addSharedPost(idOfUser, ifIsShare, idOfPost, idOfSharedPost).then( async () => {\r\n            await ifAlreadyShare().then(() => {\r\n                setIfLoading(false);\r\n                setIfIsShare(!ifIsShare);\r\n            });\r\n        });\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={ async () => await addOrRemovePost()} className=\"shareButton opacity\" style={{backgroundColor: backgroundColor1, color: backgroundColor4}}>{ifLoading ? <ClipLoader color={backgroundColor4} size={10} ></ClipLoader> : ifIsShare ? \"sdíleno\" : \"sdílej\"}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SharingButton\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport SharingButton from './SharingButton';\r\nimport { format } from 'timeago.js';\r\n\r\nconst UserProfile = ({ friends, unReaded, idOfUser, style, mobile, sharing, addSharedPost, idOfPost, sharingPost, createdAt, children }) => {\r\n    const { backgroundColor3, backgroundColor1, onlineFriends } = useContext(GlobalContext);\r\n\r\n    const [currentUser, setCurrentUser] = useState([]);\r\n\r\n    const [isOnline, setIsOnline] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getUrlAndCurrentUser = async () => {\r\n            if (friends?.some(friend => friend._id === idOfUser)) {\r\n                const currentUserData = friends?.filter(friend => friend._id === idOfUser)[0]\r\n                setCurrentUser(currentUserData);\r\n                setIsOnline(onlineFriends?.some(onlineUser => onlineUser.userId === currentUserData._id));\r\n            } else {\r\n                // ziskame data uzivatele podle idOfUser\r\n                const currentUser = await axios.get(changePath(`/users/getUser/${idOfUser}`));\r\n                // ulozime uzivatele do promenne currentUser\r\n                setCurrentUser(currentUser.data);\r\n                setIsOnline(onlineFriends?.some(onlineUser => onlineUser.userId === currentUser.data._id));\r\n            }\r\n        }\r\n        getUrlAndCurrentUser();\r\n    }, [idOfUser, onlineFriends])\r\n\r\n    return (\r\n        <div style={sharing && { display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", marginTop: \"5px\" }}>\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n                <Link to={`/profile/${idOfUser}`} className=\"userProfile\">\r\n                    <div className=\"mainImg\">\r\n                        <img src={currentUser.idOrUrlOfProfilePicture ? currentUser.idOrUrlOfProfilePicture : \"/img/anonymous.png\"} alt=\"\" style={style} referrerPolicy=\"no-referrer\" />\r\n                        {isOnline && <div className=\"online\" style={unReaded ? { border: \"2px solid \" + backgroundColor1 } : { border: \"2px solid white\" }}></div>}\r\n                    </div>\r\n                    {!mobile && <span style={{ color: backgroundColor3 }}>{currentUser?.username} {sharingPost && <span style={{ color: backgroundColor1 }}>sdílí</span>}</span>}\r\n                </Link>\r\n                {children}\r\n                {createdAt && <span style={{ color: backgroundColor3 }}>{format(createdAt, 'myLanguage')}</span>}\r\n            </div>\r\n            {sharing && <SharingButton addSharedPost={addSharedPost} idOfUser={idOfUser} idOfPost={idOfPost} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","import React, { useContext, useState } from 'react';\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport changePath from '../changePath';\r\nimport axios from 'axios';\r\nimport UserProfile from '../components/UserProfile';\r\nimport { FiX } from 'react-icons/fi';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst SearchBar = () => {\r\n    const { user, backgroundColor1 } = useContext(GlobalContext);\r\n\r\n    const [isTyping, setIsTyping] = useState(false);\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const searchUsers = async (value) => {\r\n        if(value === \"\") {\r\n            setUsers([])\r\n        } else {\r\n            const newUsers = await axios.get(changePath(`/users/getSearchPeople/${value}`));\r\n            setUsers(newUsers.data.filter(newUser => newUser._id !== user._id));\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <BiSearchAlt className={isTyping ? \"none\" : \"searchIcon scaled pointer\"} onClick={() => setIsTyping(!isTyping)}/>\r\n            <div className={isTyping ? \"resultSearchContainer\" : \"none\"}>\r\n                <input onChange={(e) => searchUsers(e.target.value)} type=\"text\" className=\"searchBarInput\" placeholder=\"vyhledejte uživatelé...\" style={isTyping ? {width: \"250px\"} : {width: \"0px\"}}/>\r\n                <FiX onClick={() => setIsTyping(!isTyping)} className=\"stopSearchPeople scaled pointer\" style={{color: backgroundColor1}}/>\r\n                \r\n                <div className=\"mainDivSearch\" >\r\n                {\r\n                    users?.map(user => (\r\n                        <div style={{margin: \"6px\"}}>\r\n                            <UserProfile idOfUser={user._id} key={user._id} style={{width: \"50px\", height: \"50px\", borderRadius: \"50%\", objectFit: \"cover\"}}>\r\n                                <Link to={`/messenger/${user._id}/0`}><AiOutlineSend className=\"searchIcon scaled\" style={{color: backgroundColor1}}/></Link>\r\n                            </UserProfile>\r\n                        </div>\r\n                    ))\r\n                }\r\n                </div>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { FiMessageCircle } from 'react-icons/fi';\r\nimport { Link } from 'react-router-dom';\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst MessengerIcon = () => {\r\n    const { user, socket, numberOfNewMessages, setNumberOfNewMessages, backgroundColor1 } = useContext(GlobalContext);\r\n\r\n    const [number, setNumber] = useState();\r\n    useEffect(() => {\r\n        const getNumberOfNewMessages = async () => {\r\n            if (!numberOfNewMessages) {\r\n                const data = await axios.post(changePath(`/messages/getNumberOfUnreadedMessagesInMessenger`), { myId: user._id });\r\n                setNumberOfNewMessages(data.data);\r\n                setNumber(data.data);\r\n            } else {\r\n                setNumber(numberOfNewMessages);\r\n            }\r\n        }\r\n        getNumberOfNewMessages();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setNumber(numberOfNewMessages);\r\n    }, [numberOfNewMessages])\r\n\r\n\r\n    // prihlaseni k socketu\r\n    useEffect(() => {\r\n        socket?.on(\"getMessage\", async (data) => {\r\n            var idOfCurrentChat = window.location.href.split('/')[5]; // useParams nefunguje v socket.io proto jsem zvolil tuto moznost ziskani parametru v url adrese\r\n            if (data.idOfChat !== idOfCurrentChat) {\r\n                setNumber(prev => {\r\n                    setNumberOfNewMessages(typeof prev == \"number\" ? prev + 1 : 1);\r\n                    return prev + 1;\r\n                });\r\n            }\r\n        })\r\n    }, [socket])\r\n    return (\r\n        <Link to={`/messenger/${user._id}/0`} className=\"scaled pointer\" style={{ textDecoration: \"none\", marginLeft: \"10px\", position: \"relative\" }}>\r\n            <FiMessageCircle className=\"searchIcon\" style={{ color: backgroundColor1 }} />\r\n            {number > 0 && <div className=\"numberOfNewMessagesinMessenger\"><span>{number}</span></div>}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MessengerIcon","import React, { useContext, useEffect, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBar from './SearchBar';\r\nimport { useHistory } from 'react-router';\r\nimport MessengerIcon from './MessengerIcon';\r\n\r\nconst TopBarHome = () => {\r\n    const { user, socket, setColors, deleteUser, backgroundColor1, backgroundColor4 } = useContext(GlobalContext);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"topBar\" style={{ backgroundColor: \"white\", color: backgroundColor1, borderBottom: \"2px solid\" + backgroundColor1 }}>\r\n            <Link to=\"/\" style={{ textDecoration: \"none\", color: backgroundColor1 }}>\r\n                <p className=\"weight800\" style={{ cursor: \"pointer\" }}>Sociální síť</p>\r\n            </Link>\r\n            <div className=\"iconsSearchAndMessenger\" style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"row\" }}>\r\n                <SearchBar />\r\n                <MessengerIcon />\r\n            </div>\r\n            <div className=\"topBarProfile\">\r\n                <Link to={`/profile/${user._id}`} className=\"userProfile\" style={{ color: backgroundColor1 }}>\r\n                    <p className=\"weight800\">{user.username}</p>\r\n                    <img className=\"profilePicture\" src={user.idOrUrlOfProfilePicture ? user.idOrUrlOfProfilePicture : \"/img/anonymous.png\"} alt=\"\" referrerPolicy=\"no-referrer\" />\r\n                </Link>\r\n\r\n                <div className=\"containerLogOut\">\r\n                    <button className=\"buttonLogOut opacity\" style={{ backgroundColor: backgroundColor1, color: backgroundColor4 }} onClick={() => {\r\n                        localStorage.removeItem(\"user\");\r\n                        localStorage.removeItem(\"colors\");\r\n                        deleteUser();\r\n                        setColors({ backgroundColor1: \"#D88100\", backgroundColor2: \"#F4F4F4\", backgroundColor3: \"black\", backgroundColor4: \"#ffffff\" });\r\n                        socket.disconnect();\r\n                        history.push(\"/register\");\r\n                    }}>odhlásit se\r\n                    </button>\r\n                    <Link to=\"/settings\" className=\"buttonLogOut opacity\" style={{ backgroundColor: backgroundColor1, color: backgroundColor4, textDecoration: \"none\", fontSize: \"13.33px\" }}>nasatvení profilu</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBarHome\r\n","import React from 'react'\r\n/* import swiper*/\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport 'swiper/swiper.min.css'\r\nimport SwiperCore, { Pagination } from 'swiper';\r\nimport UserProfile from './UserProfile';\r\nSwiperCore.use([Pagination]);\r\n\r\n\r\nconst SwiperOnlineFriends = ({ users, type, classBorderRadius }) => {\r\n    return (\r\n        <>\r\n            {\r\n                type === 1\r\n                    ?\r\n                    <div className={`swiperOnline ${classBorderRadius ? classBorderRadius : \"mobile\"}`} >\r\n                        <Swiper slidesPerView={6} spaceBetween={0} pagination={{ \"clickable\": true }} className=\"mySwiper\">\r\n                            {users?.map((user) => (\r\n                                <SwiperSlide key={user._id} >\r\n                                    <UserProfile key={user._id} idOfUser={user._id} friends={users} mobile={true} style={{ width: \"42px\", height: \"42px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n                                </SwiperSlide>\r\n                            ))}\r\n                        </Swiper>\r\n                    </div>\r\n                    :\r\n                    <div className=\"onlineListOfUsers\">\r\n                        {users?.map((user) => (\r\n                            <div className=\"pc\" key={user._id} >\r\n                                <UserProfile key={user._id} idOfUser={user._id} friends={users} mobile={false} style={{ width: \"42px\", height: \"42px\", borderRadius: \"50%\", objectFit: \"cover\" }} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SwiperOnlineFriends\r\n","import {storage} from \"../firebaseStorage/storage\";\r\n\r\n// ulozeni img do uloziste\r\nexport const uploadImg = async (image, name) => {\r\n    if(image) {\r\n      // odeslani img do storage\r\n      try {\r\n        await storage.ref(name).put(image).then(() => {\r\n           console.log(\"soubor ulozen v ulozisti\");\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      \r\n    }\r\n}\r\n\r\n// stahnuti url obrazku pomoci jeho jmena\r\nexport const downloadUrlImg = async (name) => {\r\n  const url = await storage.ref(name).getDownloadURL();\r\n  return url;\r\n}","import React, { useContext, useState } from 'react'\r\nimport Picker from 'emoji-picker-react';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\nimport { HiOutlineEmojiHappy } from 'react-icons/hi';\r\nconst EmojiPicker = ({ setValOfText }) => {\r\n    const { backgroundColor1, backgroundColor4 } = useContext(GlobalContext);\r\n\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setChosenEmoji(emojiObject);\r\n        setValOfText(val => val + emojiObject.emoji);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <button className='buttonsForVariantsMessage opacity' onClick={() => setIsOpen(!isOpen)} style={{ color: backgroundColor4, backgroundColor: backgroundColor1 }} ><HiOutlineEmojiHappy className='reactIcon' /></button>\r\n            {\r\n                isOpen &&\r\n                <div className='pickerReact'>\r\n                    <Picker onEmojiClick={onEmojiClick} />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmojiPicker","import React, { useContext, useState } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState';\r\nimport { MdInsertPhoto } from 'react-icons/md';\r\n\r\nconst PhotoMessage = ({ setPhotoFile }) => {\r\n    const { backgroundColor1, backgroundColor4 } = useContext(GlobalContext);\r\n\r\n    const [image, setImage] = useState();\r\n    const onUpload = async (file) => {\r\n        setImage(file);\r\n        setPhotoFile(file);\r\n    }\r\n    return (\r\n        <>\r\n            <label htmlFor=\"photoFileUpload\" id=\"inputfileRegister\" className=\"buttonsForVariantsMessage opacity\" style={{ color: backgroundColor4, backgroundColor: backgroundColor1 }} >\r\n                <MdInsertPhoto className='reactIcon' />\r\n            </label>\r\n            <input id=\"photoFileUpload\" key={image || ''} type=\"file\" accept='image/*' onChange={(e) => { onUpload(e.target.files[0]) }} hidden />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PhotoMessage","import React, { useContext, useState } from 'react'\r\nimport { GlobalContext } from '../../context/GlobalState';\r\nimport { ImVideoCamera } from 'react-icons/im';\r\n\r\nconst VideoMessage = ({ setVideoFile }) => {\r\n    const { backgroundColor1, backgroundColor4 } = useContext(GlobalContext);\r\n\r\n    const [file, setFile] = useState();\r\n    const onUpload = async (file) => {\r\n        setFile(file);\r\n        setVideoFile(file);\r\n    }\r\n    return (\r\n        <>\r\n            <label htmlFor=\"videoFileUpload\" id=\"inputfileRegister\" className=\"buttonsForVariantsMessage opacity\" style={{ color: backgroundColor4, backgroundColor: backgroundColor1 }} >\r\n                <ImVideoCamera className='reactIcon' />\r\n            </label>\r\n            <input id=\"videoFileUpload\" key={file || ''} type=\"file\" accept=\"video/*\" onChange={(e) => { onUpload(e.target.files[0]) }} hidden />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoMessage","import React, { useContext, useEffect, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { downloadUrlImg, uploadImg } from '../storageImgActions/imgFunctions';\r\nimport { TiDelete } from 'react-icons/ti';\r\nimport changePath from '../changePath';\r\nimport axios from 'axios';\r\nimport validator from 'validator';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EmojiPicker from './addMessageVariants/EmojiPicker';\r\nimport PhotoMessage from './addMessageVariants/PhotoMessage';\r\nimport VideoMessage from './addMessageVariants/VideoMessage';\r\n\r\nconst AddNewPost = ({ friends }) => {\r\n    const { user, socket, backgroundColor1, backgroundColor2, backgroundColor4 } = useContext(GlobalContext);\r\n\r\n    // objekt daneho souboru\r\n    const [file, setFile] = useState(null);\r\n\r\n    // jaky typ je url // 1 = img, 2 = video\r\n    const [typeOfUrl, setTypeOfUrl] = useState(null);\r\n\r\n\r\n    // useState promenna pro ulozeni hodnoty co se vam honi hlavou\r\n    const [desc, setDesc] = useState(\"\");\r\n\r\n    const [errorMessages, setErrorMessages] = useState(null);\r\n\r\n    // hodnota inputu pro url\r\n    const [valueUrlInput, setValueUrlInput] = useState(\"\");\r\n\r\n    // loading\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        whatTypeIsFile(file?.name);\r\n        console.log(file)\r\n    }, [file])\r\n\r\n    useEffect(() => {\r\n        whatTypeIsFile(valueUrlInput);\r\n    }, [valueUrlInput])\r\n\r\n\r\n    // funkce \r\n    const validation = (val) => {\r\n        setDesc(val);\r\n        if (val) {\r\n            setErrorMessages(null);\r\n            return false;\r\n        } else {\r\n            setErrorMessages(\"toto pole je povinné\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const createPost = async () => {\r\n        // zjistime jestli pole co se vam honi hlavou neni prazdne\r\n        if (validation(desc)) {\r\n            return;\r\n        }\r\n        // nacitani nastavime na true\r\n        setLoading(true)\r\n\r\n        // jestli uzivatel vybral soubor tak se vytvori zaznam v tabulkce urls\r\n        const newFile = (file && (typeof file === \"object\")) ? file : null;\r\n\r\n        // jeslit soubor existuje ulozeme ho do storage\r\n        if (newFile) {\r\n            // promenna cesta k souboru (obrazku)\r\n            const newFileName = \"posts/\" + user.username + \"/\" + newFile.name + \"\" + Math.floor(Date.now() / 1000);\r\n            // obrazek se ulozi do storage\r\n            await uploadImg(newFile, newFileName).then(async () => {\r\n                console.log('upload img succesfully');\r\n                const urlOfFile = await downloadUrlImg(newFileName);\r\n                await setDataOfPost(urlOfFile);\r\n            });\r\n        } else {\r\n            // jestli obrzek neexistuje tak posilame do funkce null\r\n            await setDataOfPost(null);\r\n        }\r\n    }\r\n\r\n    // funkce pro vytvoeni ulozeni prispevku do databaze\r\n    const setDataOfPost = async (img) => {\r\n        try {\r\n            // vytvoreni promenne ve ktere budou data prispevku\r\n            const newPost = {\r\n                userId: user._id,\r\n                desc: desc,\r\n                urlOfImg: typeOfUrl === 1 && validator.isURL(valueUrlInput) ? valueUrlInput : (img ? img : null),\r\n                urlOfVideo: typeOfUrl === 2 && validator.isURL(valueUrlInput) ? valueUrlInput : (img ? img : null)\r\n            }\r\n            // kdyz vse probehne v poradku tak se vytvori samotny prispevek v databazi prispevku\r\n            const dataOfNewPost = await axios.post(changePath(\"/posts/addPost\"), newPost);\r\n            console.log(friends);\r\n            // vsem nasim pratelum posleme notifikaci\r\n            if (friends.length === 0) {\r\n                window.location.reload();\r\n            } else {\r\n                friends.forEach(async (friend, index) => {\r\n                    await sendNotification(\r\n                        friend._id,\r\n                        5,\r\n                        null,\r\n                        dataOfNewPost.data._id,\r\n                        \"přidal/a nový příspěvek\"\r\n                    );\r\n                    console.log(index);\r\n                    if (friends.length - 1 === index) window.location.reload();\r\n                })\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const sendNotification = async (recieverId, type, url, idOfPost, text) => {\r\n        // pridani notifikace do db\r\n        const newNotificatons = await axios.post(changePath(`/notifications/addNotification`), { senderId: user._id, recieverId, type, url, idOfPost, text });\r\n        // pridani notifikace do socket.io serveru\r\n        socket.emit(\"sendNotification\", { id: newNotificatons.data._id, senderId: user._id, recieverId, type, url, idOfPost, readed: false, text });\r\n    }\r\n\r\n    const whatTypeIsFile = (val) => {\r\n        const valLowerCase = val?.toLowerCase();\r\n        if (valLowerCase?.includes(\"youtube\") || valLowerCase?.includes(\"mp4\") || valLowerCase?.includes(\"avi\")) {\r\n            setTypeOfUrl(2)\r\n            // jestli uzivatel zadal url z youtube musime url upravit\r\n            if (valLowerCase?.includes(\"youtube\") && !valLowerCase?.includes(\"embed\")) {\r\n                var id = val.split(\"v=\");\r\n                id = id[1].split(\"&\");\r\n                setValueUrlInput(\"https://www.youtube.com/embed/\" + id[0]);\r\n            } else {\r\n                setValueUrlInput(val);\r\n            }\r\n            console.log(2)\r\n        } else {\r\n            setTypeOfUrl(1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"addNewPost\">\r\n            <div className=\"addNewPostContainer\">\r\n                <div className=\"topAddNewPost\">\r\n                    <div className='topAddNewPostLeft'>\r\n                        <Link to={`/profile/${user._id}`} style={{ display: 'flex', alignItems: \"center\" }}>\r\n                            <img className=\"profilePicture\" src={user.idOrUrlOfProfilePicture ? user.idOrUrlOfProfilePicture : \"/img/anonymous.png\"} alt=\"\" referrerPolicy=\"no-referrer\" />\r\n                        </Link>\r\n                        <input type=\"text\" value={desc} onChange={(e) => validation(e.target.value)} className=\"inputAddNewPost\" placeholder=\"co se vám honí hlavou...\" />\r\n                    </div>\r\n                    <div className='inputEmojiPickerContainer postEmojiContainer'>\r\n\r\n                        <EmojiPicker setValOfText={validation} />\r\n                    </div>\r\n                </div>\r\n                {errorMessages && <div className=\"bottomAddNewPost\"><span className=\"errorMessage\">{errorMessages}</span></div>}\r\n                {(file || valueUrlInput !== \"\") &&\r\n                    (typeOfUrl === 1\r\n                        ?\r\n                        <div className=\"imgShowContainerAddPost\">\r\n                            <img src={file ? URL.createObjectURL(file) : (validator.isURL(valueUrlInput) && valueUrlInput)} alt=\"video/obrázek nelze najít\" className=\"imgShowAddPost\" referrerPolicy=\"no-referrer\" />\r\n                            <TiDelete className=\"removeImgShow scaled\" onClick={(e) => { setFile(null); setValueUrlInput(\"\") }} />\r\n\r\n                        </div>\r\n                        :\r\n                        (file?.name?.includes(\".gif\") || valueUrlInput.includes(\"youtu\") || valueUrlInput.includes(\".gif\")\r\n                            ?\r\n                            <div className=\"imgShowContainerAddPost\">\r\n                                <iframe src={file ? URL.createObjectURL(file) : (validator.isURL(valueUrlInput) && valueUrlInput)} alt=\"video/obrázek nelze najít\" className=\"videoShowAddPost\" referrerPolicy=\"no-referrer\" ></iframe>\r\n                                <TiDelete className=\"removeImgShow scaled\" onClick={(e) => { setFile(null); setValueUrlInput(\"\"); }} />\r\n                            </div>\r\n                            :\r\n                            <div className=\"imgShowContainerAddPost\">\r\n                                <video className=\"videoShowAddPost\" controls>\r\n                                    <source src={file ? URL.createObjectURL(file) : (validator.isURL(valueUrlInput) && valueUrlInput)} type='video/mp4' />\r\n                                </video>\r\n                                <TiDelete className=\"removeImgShow scaled\" onClick={(e) => { setFile(null); setValueUrlInput(\"\"); }} />\r\n                            </div>\r\n                        )\r\n                    )\r\n                }\r\n                <hr className=\"lineNewPost\" style={{ backgroundColor: backgroundColor1, width: \"100%\" }} />\r\n                <div className=\"middleAddNewPost\">\r\n                    {/* <label htmlFor=\"fileUpload\" id=\"inputfileRegister\" className=\"inputImgAddPost opacity\" style={{ backgroundColor: backgroundColor1, color: \"white\" }} >\r\n                        <span style={{ color: backgroundColor4 }}>obrázek</span>\r\n                    </label>  */}\r\n                    <div className='actionsMethod'>\r\n                        <PhotoMessage setPhotoFile={setFile} />\r\n                        <VideoMessage setVideoFile={setFile} />\r\n                    </div>\r\n                    {/* <input id=\"fileUpload\" key={url || ''} type=\"file\" accept=\"url/*\" onChange={(e) => { setFile(e.target.files[0]); setValueUrlInput(\"\") }} required /> */}\r\n\r\n                    <span>nebo</span>\r\n                    <input type=\"text\" onChange={(e) => { setValueUrlInput(e.target.value) }} className=\"inputAddNewPost inputUlrImgAddNewPost\" style={{ backgroundColor: \"black\", color: \"white\" }} placeholder=\"url obrázku / videa...\" />\r\n                </div>\r\n                <hr className=\"lineNewPost\" style={{ backgroundColor: backgroundColor1, width: \"75%\" }} />\r\n                <div className=\"bottomAddNewPost\">\r\n                    <button style={{ backgroundColor: backgroundColor1, color: backgroundColor4 }} className=\"inputImgAddPost opacity\" onClick={createPost}><span> {!loading ? \"přídat příspěvek\" : <ClipLoader color={backgroundColor2} size={10} />} </span></button>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AddNewPost\r\n","const czDataFormat = (number, index, totalSec) => {\r\n\r\n    return [\r\n      ['právě teď', 'right now'],\r\n      ['před %s sekundama', 'in %s seconds'],\r\n      ['před jednou minutou ', 'in 1 minute'],\r\n      ['před %s minutama', 'in %s minutes'],\r\n      ['před jednou hodinou', 'in 1 hour'],\r\n      ['před %s hodinama', 'in %s hours'],\r\n      ['před jedním dnem', 'in 1 day'],\r\n      ['před %s dny', 'in %s days'],\r\n      ['před jedním týdnem', 'in 1 week'],\r\n      ['před %s týdnama', 'in %s weeks'],\r\n      ['před jendím měsícem', 'in 1 month'],\r\n      ['před %s měsícemi', 'in %s months'],\r\n      ['před jendím rokem', 'in 1 year'],\r\n      ['před %s lety', 'in %s years']\r\n    ][index];\r\n};\r\n\r\nexport default czDataFormat;","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { FcLikePlaceholder, FcLike } from \"react-icons/fc\";\r\nimport { format } from 'timeago.js';\r\nimport { Link } from \"react-router-dom\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Comment = ({comment, addComment, commentMain}) => {\r\n\r\n    const {user, backgroundColor1, backgroundColor2, backgroundColor3} = useContext(GlobalContext);\r\n\r\n    // promenna ktera resi zda jsou komentare videt\r\n    const [show, setShow] = useState(false);\r\n\r\n    // promenna ve ktere je ulozen text inputu\r\n    const [valueOfInput, setValueOfInput] = useState(\"\");\r\n\r\n    // promenna vlastnika komentare\r\n    const [userOfComment, setUserOfComment] = useState([]);\r\n\r\n    // promenna zdali jsem komentar likenul\r\n    const [ifIsLiked, setIfIsLiked] = useState(comment.idOfLikes.includes(user._id));\r\n\r\n    // promenna pro pocet liku\r\n    const [lenghtOfLikes, setLenghtOfLikes] = useState(comment.idOfLikes.length);\r\n\r\n    // promenna zda uzivatel kliknul na talickto pridej komentar a stranka se nacita\r\n    const [ifLoading, setifLoading] = useState(false);\r\n\r\n    // ulozeni vsech deti tohoto komentare do promenne nestedComments\r\n    const nestedComments = (comment.children || []).map((comment1) => {\r\n        return <Comment comment={comment1} commentMain={commentMain} addComment={addComment} key={comment1._id} />;\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getUserOfComment = async () => {\r\n            const userOfCommnent = await axios.get(changePath(`/users/getUser/${comment.idOfUser}`));\r\n            setUserOfComment(userOfCommnent.data);\r\n        }\r\n        getUserOfComment();\r\n    }, [comment.idOfUser])\r\n\r\n    // pridani nebo odebrani likeu\r\n    const addOrRemoveLike = async () => {\r\n        // zmena promenne ifIsLiked\r\n        ifIsLiked ? setLenghtOfLikes(lenght => lenght - 1) : setLenghtOfLikes(lenght => lenght + 1);\r\n        setIfIsLiked(!ifIsLiked);\r\n        // pridani nebo odebrani likeu v databazi\r\n        await axios.put(changePath(`/comments/addOrRemoveLike/${comment._id}/${user._id}`));\r\n        \r\n    }\r\n\r\n    const prepareToAddComment = () => {\r\n        addComment(valueOfInput, comment._id, user._id, setifLoading).then(() => {\r\n            setValueOfInput(\"\");\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"userCommentContainer\">\r\n                <div className=\"userCommentTop\">\r\n                    <Link to={`/profile/${userOfComment._id}`} style={{display: 'flex', alignItems: \"center\", textDecoration: \"none\", color: \"black\", marginRight: \"8px\"}}>\r\n                        <img className=\"imgUserComment\" src={userOfComment.idOrUrlOfProfilePicture ? userOfComment.idOrUrlOfProfilePicture : \"img/anonymous.png\"} alt=\"\" referrerPolicy=\"no-referrer\"/>\r\n                        <span style={{color: backgroundColor3}}>{userOfComment.username}</span>\r\n                    </Link>\r\n                    <span style={{color: backgroundColor3}}>{format(comment.createdAt, 'myLanguage')}</span>\r\n                </div>\r\n                <div className=\"userCommentMid\">\r\n                    <span style={{color: backgroundColor3}}>{comment.value}</span>\r\n                </div>\r\n                <div className=\"userCommentBottom\">\r\n                    <span style={{color: backgroundColor3}}>{ifIsLiked ? <FcLike style={{fontSize: \"25px\"}} className=\"scaled pointer\" onClick={addOrRemoveLike} /> : <FcLikePlaceholder style={{fontSize: \"25px\"}} className=\"scaled pointer\" onClick={addOrRemoveLike} /> }{lenghtOfLikes}</span>\r\n                    <span onClick={() => setShow(!show)} className=\"pointer\" style={{color: backgroundColor3}} >počet odpovědí {comment.children ? comment.children.length : \"0\"}</span>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n            {show && \r\n                <div className=\"commentsContainer\">\r\n                    \r\n                    <div className=\"addComment\">\r\n                        <input className=\"addCommentInput\" style={{backgroundColor: backgroundColor2}} type=\"text\" value={valueOfInput} onChange={(e) => setValueOfInput(e.target.value)} placeholder=\"co máš na mysli...\" />\r\n                        <button className=\"addCommentButton\" style={{backgroundColor: backgroundColor1}} onClick={prepareToAddComment}>{!ifLoading ? \"přidej komentář\" : <ClipLoader color={backgroundColor2} size={10} />}</button>\r\n                    </div>\r\n                    <ul>\r\n                        {nestedComments}\r\n                    </ul>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { IoIosArrowDown, IoIosArrowUp } from \"react-icons/io\";\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport Comment from './Comment';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Comments = ({post, sendNotification}) => {\r\n    const {user, backgroundColor1, backgroundColor2, backgroundColor3, backgroundColor4} = useContext(GlobalContext);\r\n\r\n    // promenna pro vsechny komentare pro tenhle prispevek\r\n    const [comments, setComments] = useState([]);\r\n\r\n    // promenna ktera resi zda jsou komentare videt\r\n    const [show, setShow] = useState(false);\r\n\r\n    // promenna ve ktere je ulozen text inputu\r\n    const [valueOfInput, setValueOfInput] = useState(\"\");\r\n\r\n    // promenna ktera ma ulozene komentare s spravne vnoreneme komentarema v children\r\n    const [allComments, setAllComments] = useState([]);\r\n\r\n    // promenna zda uzivatel kliknul na talickto pridej komentar a stranka se nacita\r\n    const [ifLoading, setifLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // najde vsechny komentare vztazene k nasemu prispevku\r\n        const getAllComments = async () => {\r\n            const newComments = await axios.get(changePath(`/comments/getComments/${post._id}`));\r\n            setComments(newComments.data);\r\n        }\r\n        getAllComments();\r\n    }, [post._id]);\r\n\r\n    useEffect(() => {\r\n      \r\n        const nestComments = (commentList) => {\r\n          // serazeni komentaru od nejnovejsiho po nejstarsiho\r\n          commentList = commentList.sort((p1, p2) => { return new Date(p2.createdAt) - new Date(p1.createdAt)});\r\n          const commentMap = {};\r\n  \r\n          // vsechny komenty se ulozi do commentMap kde jsou indexy jako id\r\n          commentList.forEach(comment => commentMap[comment._id] = comment);\r\n          // do komentaru vnorime deti komenatre (komentare ktere patri hlvanimu komentari)\r\n          commentList.forEach(comment => {\r\n            if(comment.idOfparentComment !== null) {\r\n              const parent = commentMap[comment.idOfparentComment];\r\n              (parent.children = parent.children || []).push(comment);\r\n            }\r\n          });\r\n          // filtrujeme seznam komentaru na hlavni komentare\r\n          return commentList.filter(comment => comment.idOfparentComment === null);\r\n          \r\n        }\r\n        setAllComments(nestComments(comments));\r\n      }, [comments]);\r\n\r\n    \r\n    // funkce\r\n    \r\n    // prida komentar\r\n    const addComment = async (valueOfInput, idOfparentComment, idOfUser, setifLoadingValue) => {\r\n        if(valueOfInput === \"\") {\r\n          return;\r\n        }\r\n        try {\r\n          setifLoadingValue(true);\r\n          const newComment = {\r\n            value: valueOfInput,\r\n            idOfPost: post._id,\r\n            idOfparentComment: idOfparentComment,\r\n            idOfUser: idOfUser\r\n          }\r\n          // pridame do promenne comments novy komentar\r\n          await axios.post(changePath(\"/comments/addComment\"), newComment);\r\n          // dostaneme vsechny komentare vztazene k prispevku\r\n          const newComments = await axios.get(changePath(`/comments/getComments/${post._id}`));\r\n          setComments(newComments.data);\r\n          // posleme notifikaci\r\n          sendNotification(post.userId, 2, \"\", post._id, \"přidal/a komentář\");\r\n          setifLoadingValue(false);\r\n          setValueOfInput(\"\");\r\n          return true\r\n        } catch (err) {\r\n          return false;\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span onClick={() => setShow(!show)} className=\"pointer\" style={{color: backgroundColor3}} >počet komentářů {comments.length} {show ? <IoIosArrowUp /> : <IoIosArrowDown />}</span>\r\n\r\n            {show && \r\n                <div className=\"commentsContainer\">\r\n                    <div className=\"addComment\">\r\n                      <input className=\"addCommentInput\" style={{backgroundColor: backgroundColor2}} type=\"text\" value={valueOfInput} onChange={(e) => setValueOfInput(e.target.value)}placeholder=\"co máš na mysli...\" />\r\n                      <button className=\"addCommentButton\" style={{backgroundColor: backgroundColor1}} onClick={() => addComment(valueOfInput, null, user._id, setifLoading)}>{!ifLoading ? \"přidej komentář\" : <ClipLoader color={backgroundColor4} size={10} />}</button>\r\n                    </div>\r\n                        {   \r\n                          allComments.map(comment => (\r\n                            <>\r\n                            <Comment comment={comment} commentMain={comment} addComment={addComment} key={comment._id} />\r\n                            </>\r\n                          ))\r\n                        }\r\n                </div>\r\n            }\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React from 'react'\r\nimport { TiDelete } from 'react-icons/ti'\r\nimport { motion } from 'framer-motion';\r\n\r\nconst PopupWindown = ({ classNameMain, classNameContainer, children, setVisible }) => {\r\n  return (\r\n    <>\r\n        <motion.div\r\n            className={classNameMain} \r\n            initial={{ scale: 0, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0, opacity: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n        >\r\n            <div className={classNameContainer}>\r\n                {children}\r\n                <TiDelete className=\"scaled removeImgShow\" onClick={() => setVisible(false)} />\r\n            </div>\r\n        </motion.div>\r\n        <div className=\"wallPaperNotWorking\"></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PopupWindown","import React, { useContext, useEffect, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport UserProfile from './UserProfile'\r\nimport axios from 'axios';\r\nimport changePath from '../changePath';\r\nimport SharingButton from './SharingButton';\r\nimport PopupWindown from './global/PopupWindown';\r\nimport EmojiPicker from './addMessageVariants/EmojiPicker';\r\n\r\nconst Share = ({ setifSharing, idOfPost, sendNotification }) => {\r\n    // zavolani prihlaseneho usera\r\n    const { user, backgroundColor1 } = useContext(GlobalContext);\r\n\r\n    // promenna pro ulozeni dat pratel\r\n    const [allFriends, setAllFriends] = useState([]);\r\n\r\n    // promenna pro ulozeni obsahu v inputu\r\n    const [valOfInput, setValOfInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // nacteni vsech pratel\r\n        const loadAllUsersFriends = async () => {\r\n            const friends = await axios.get(`/users/getAllFriends/${user._id}`);\r\n            setAllFriends(friends.data);\r\n            console.log(friends.data);\r\n        }\r\n        loadAllUsersFriends();\r\n    }, [user._id]);\r\n\r\n    // funkce\r\n\r\n    const addSharedPost = async (id, ifIsShare, idOfPost, idOfSharedPost) => {\r\n\r\n\r\n        if (ifIsShare) {\r\n            await axios.post(changePath(\"/sharedPosts/removeSharedPost\"), { idOfSharedPost: idOfSharedPost });\r\n            if (id) {\r\n                console.log(\"zrusil sdileni s id\" + id)\r\n                await sendNotification(id, 3, null, idOfPost, \"odebral sdílení\", true);\r\n            } else {\r\n\r\n                allFriends.forEach(async (friend) => {\r\n                    await sendNotification(friend._id, 3, null, idOfPost, \"odebral sdílení\", true);\r\n                })\r\n\r\n                console.log(\"zrusil sdileni bez id\")\r\n            }\r\n        } else {\r\n            const postData = {\r\n                userId: user._id,\r\n                idOfSharingToUser: id,\r\n                desc: valOfInput,\r\n                idOfMainPost: idOfPost\r\n            }\r\n            await axios.post(changePath(\"/sharedPosts/addSharedPost\"), postData);\r\n\r\n            if (id) {\r\n                console.log(\"sdili s id\")\r\n                await sendNotification(id, 3, null, idOfPost, \"sdílí\", true);\r\n            } else {\r\n                console.log(\"sdili bez id\")\r\n\r\n                allFriends.forEach(async (friend) => {\r\n                    await sendNotification(friend._id, 3, null, idOfPost, \"sdílí\", true);\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <PopupWindown classNameMain=\"Share\" classNameContainer=\"shareContainer\" setVisible={setifSharing}>\r\n            <h4 style={{ color: backgroundColor1 }}>Sdílet všem přátelům</h4>\r\n            <div className=\"shareMainBox\">\r\n                <input type=\"text\" className=\"inputValShare\" placeholder=\"napsat něco k danému sdílenému příspěvku...\" onChange={(e) => setValOfInput(e.target.value)} value={valOfInput} />\r\n                <EmojiPicker setValOfText={setValOfInput} />\r\n                <SharingButton addSharedPost={addSharedPost} idOfPost={idOfPost} />\r\n            </div>\r\n            <h4 style={{ color: backgroundColor1 }}>Nebo sdílet pouze některým</h4>\r\n            <div className=\"shareAllFriends\">\r\n                {\r\n                    allFriends?.map((friends) => (\r\n                        <UserProfile idOfUser={friends._id} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50%\", objectFit: \"cover\" }} sharing={true} addSharedPost={addSharedPost} idOfPost={idOfPost} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </PopupWindown>\r\n    )\r\n}\r\n\r\nexport default Share\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { format, register } from 'timeago.js';\r\nimport czDataFormat from '../format.jsCZ/CzFormat';\r\nimport { FcLikePlaceholder, FcLike } from \"react-icons/fc\";\r\nimport { FaShare } from \"react-icons/fa\"\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport Comments from './Comments';\r\nimport changePath from '../changePath';\r\nimport { Link } from \"react-router-dom\";\r\nimport Share from './Share';\r\nimport UserProfile from './UserProfile';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nconst Post = ({ post, userOfPost }) => {\r\n    // registrovani cestiny do formatjs\r\n    register('myLanguage', czDataFormat);\r\n\r\n    // zavolani prihlaseneho usera\r\n    const { user, socket, backgroundColor1, backgroundColor3, onlineFriends } = useContext(GlobalContext);\r\n\r\n    // Promenne UseState\r\n\r\n    // promenna pro pocet liku\r\n    const [lenghtOfLikes, setLenghtOfLikes] = useState(post.idOfLikes.length);\r\n\r\n    // promenna zdali jsem prispevek likenul\r\n    const [ifIsLiked, setIfIsLiked] = useState(post.idOfLikes.includes(user._id));\r\n\r\n    // promenna pro zjisteni zda uzivatel jiz sdili prispevek\r\n    const [ifSharing, setifSharing] = useState(false);\r\n\r\n    \r\n    // promenna pro ulozeni vlastnika prispevku v notifikacich\r\n    const [mainUserOfPost, setMainUserOfPost] = useState(userOfPost);\r\n\r\n    useEffect(() => {\r\n        // funkce pro ziskani dat vlastnika prispevku\r\n        const getUser = async () => {\r\n\r\n            const userOfPost = await axios.get(changePath(`/users/getUser/${post.userId}`));\r\n            setMainUserOfPost(userOfPost.data)\r\n        }\r\n        !userOfPost && getUser();\r\n    }, [post.userId])\r\n    \r\n\r\n    const sendNotification = async (recieverId, type, url, idOfPost, text, share) => {\r\n        // pridani notifikace do db\r\n\r\n        if (user._id === post.userId && !share) return;\r\n        console.log(recieverId)\r\n\r\n        await axios.post(changePath(`/notifications/addNotification`), { senderId: user._id, recieverId, type, url, idOfPost, text });\r\n        // pridani notifikace do socket.io serveru\r\n        socket.emit(\"sendNotification\", { senderId: user._id, recieverId, type, url, idOfPost, readed: false, text });\r\n\r\n    }\r\n    // funkce \r\n\r\n    // pridani nebo odebrani likeu\r\n    const addOrRemoveLike = async () => {\r\n        var text = !ifIsLiked ? \"přidal/a like\" : \"odebral/a like\";\r\n        ifIsLiked ? setLenghtOfLikes(lenght => lenght - 1) : setLenghtOfLikes(lenght => lenght + 1);\r\n        setIfIsLiked(!ifIsLiked);\r\n        await axios.put(changePath(`/posts/addOrRemoveLike/${post._id}`), { userId: user._id });\r\n        await sendNotification(post.userId, 1, null, post._id, text);\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"postContainer\">\r\n                {post?.sharedUserId &&\r\n                    <>\r\n                        <div style={{ marginBottom: \"15px\" }}><UserProfile idOfUser={post?.sharedUserId} sharingPost={true} createdAt={post.createdAt} style={{ width: \"42px\", height: \"42px\", objectFit: \"cover\", borderRadius: \"50%\" }} /> </div>\r\n                        <span style={{ color: backgroundColor3 }}>{post.sharedDesc}</span>\r\n                        <hr className=\"lineNewPost\" style={{ backgroundColor: backgroundColor1 }} />\r\n                    </>\r\n                }\r\n                <div className=\"userContainerPost\">\r\n                    <Link to={`/profile/${mainUserOfPost?._id}`} className=\"userProfile\">\r\n                        <div className=\"mainImg\">\r\n                            <img className=\"profilePicture\" src={mainUserOfPost?.idOrUrlOfProfilePicture ? mainUserOfPost?.idOrUrlOfProfilePicture : \"/img/anonymous.png\"} alt=\"\" referrerPolicy=\"no-referrer\" />\r\n                            {onlineFriends?.some(onlineUser => onlineUser.userId === mainUserOfPost?._id) && <div className=\"online\" style={{ border: \"2px solid white\" }}></div>}\r\n                        </div>\r\n                        <span style={{ color: backgroundColor3 }}>{mainUserOfPost?.username}</span>\r\n                        {post?.newPicture && <span style={{ color: backgroundColor1 }}>přidal/a novou fotku</span>}\r\n                    </Link>\r\n                    {post?.sharedPostCreatedAt ?\r\n                        <span style={{ color: backgroundColor3 }}>{format(post.sharedPostCreatedAt, 'myLanguage')}</span>\r\n                        :\r\n                        <span style={{ color: backgroundColor3 }}>{format(post.createdAt, 'myLanguage')}</span>\r\n                    }\r\n                </div>\r\n                <div className=\"postContent\">\r\n                    <span className=\"postDescContent\" style={{ color: backgroundColor3 }}>{post.desc}</span>\r\n                    {post.urlOfImg && <img className=\"postImg\" src={post.urlOfImg} alt=\"\" referrerPolicy=\"no-referrer\" />}\r\n                    {post.urlOfVideo &&\r\n                        (post?.urlOfVideo?.includes(\"youtu\") || post?.urlOfVideo?.includes(\".gif\")\r\n                        ?\r\n                        <iframe autoPlay={1} className=\"videoShowAddPost videoMargin\" src={post.urlOfVideo} alt=\"\" referrerPolicy=\"no-referrer\" ></iframe>\r\n                        :\r\n                        <video className=\"videoShowAddPost videoMargin\" controls>\r\n                            <source src={post.urlOfVideo} type='video/mp4' />\r\n                        </video>)\r\n                    }\r\n                </div>\r\n                <div className=\"postBottom\">\r\n                    <div className=\"acitonsForPosts\">\r\n                        <div>\r\n                            {ifIsLiked ? <FcLike style={{ fontSize: \"35px\", cursor: \"pointer\" }} className=\"scaled\" onClick={addOrRemoveLike} /> : <FcLikePlaceholder className=\"scaled\" style={{ fontSize: \"35px\", cursor: \"pointer\" }} onClick={addOrRemoveLike} />}\r\n                            <span style={{ color: backgroundColor3 }}>{lenghtOfLikes}</span>\r\n                        </div>\r\n                        <FaShare style={{ fontSize: \"30px\", cursor: \"pointer\", color: backgroundColor1 }} className=\"scaled\" onClick={() => setifSharing(!ifSharing)} />\r\n                    </div>\r\n                    <Comments post={post} key={post._id} sendNotification={sendNotification} />\r\n                </div>\r\n            </div>\r\n            <AnimatePresence\r\n                initial={false}\r\n                exitBeforeEnter={true}\r\n                onExitComplete={() => null}\r\n            >\r\n                {ifSharing && <Share setifSharing={setifSharing} sendNotification={sendNotification} idOfPost={post._id} />}\r\n            </AnimatePresence>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n\r\n\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { HiOutlineBell } from 'react-icons/hi';\r\nimport { useHistory } from 'react-router-dom';\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport Post from './Post';\r\nimport UserProfile from './UserProfile';\r\nimport { format, register } from 'timeago.js';\r\nimport czDataFormat from '../format.jsCZ/CzFormat';\r\nimport PopupWindown from './global/PopupWindown';\r\nimport { AnimatePresence } from 'framer-motion';\r\n\r\nconst Notifications = () => {\r\n    // registrovani cestiny do formatjs\r\n    register('myLanguage', czDataFormat);\r\n\r\n\r\n    const { user, socket, backgroundColor1, backgroundColor2, backgroundColor4 } = useContext(GlobalContext);\r\n\r\n    // useState promenne\r\n\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    const [numberOfNewNotifications, setNumberOfNewNotifications] = useState();\r\n\r\n    const [showNotifications, setShowNotifications] = useState(false);\r\n\r\n    const [showPost, setShowPost] = useState(false);\r\n    const [dataOfPost, setDataOfPost] = useState([]);\r\n\r\n    const [friends, setFriends] = useState();\r\n\r\n    const history = useHistory();\r\n\r\n    // useEffect\r\n\r\n    useEffect(() => {\r\n        const setAllNotifications = async () => {\r\n            // nacteni vsech notifikaci daneho uzivatele\r\n            const allNotifications = await axios.get(changePath(`/notifications/getAllNotifications/${user._id}`));\r\n            setNotifications(allNotifications.data);\r\n            setNumberOfNewNotifications(allNotifications.data.filter(notification => notification.readed === false).length);\r\n            sortNotificationsByDate();\r\n        }\r\n        setAllNotifications();\r\n    }, [user._id])\r\n\r\n    useEffect(() => {\r\n        socket?.on(\"getNotification\", (data) => {\r\n            console.log(\"new notification\", data);\r\n            setNotificationsNewData(data);\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        const fetchAllFriends = async () => {\r\n            const dataOfFriends = await axios.get(changePath(`/users/getAllFriends/${user._id}`));\r\n            setFriends(dataOfFriends.data);\r\n        }\r\n        fetchAllFriends();\r\n    }, [])\r\n\r\n\r\n    // funkce\r\n\r\n    const setNotificationsNewData = (data) => {\r\n        setNumberOfNewNotifications(prev => prev + 1);\r\n        setNotifications((notifications) => [...notifications, { _id: data.id, senderId: data.senderId, recieverId: data.recieverId, type: data.type, url: data.url, idOfPost: data.idOfPost, text: data.text, createdAt: data.date }]);\r\n        sortNotificationsByDate();\r\n    }\r\n\r\n    const sortNotificationsByDate = () => {\r\n        setNotifications((prev) => [...prev.sort((p1, p2) => { return new Date(p2.createdAt) - new Date(p1.createdAt) })]);\r\n    }\r\n\r\n    const getAndShowPost = async (idOfPost, idOfNotification) => {\r\n\r\n        // nacteni prispevku ktery chceme (podle id uzivatele ifOfPost)\r\n        const currentPost = await axios.get(changePath(`/posts/getPost/${idOfPost}`));\r\n        setDataOfPost(currentPost.data);\r\n        setShowPost(true);\r\n        setShowNotifications(false);\r\n        await setReadedToTrue(idOfNotification, false);\r\n    }\r\n\r\n    const setReadedToTrue = async (idOfNotification, link, senderId) => {\r\n\r\n        var currentNotification = notifications.filter((notification) => notification._id === idOfNotification);\r\n        !currentNotification[0].readed && setNumberOfNewNotifications(prev => prev - 1);\r\n        console.log(currentNotification[0].readed);\r\n        currentNotification[0].readed = true;\r\n        setNotifications((prev) => [...prev.filter((notification) => notification._id !== idOfNotification)]);\r\n        setNotifications((notification) => [...notification, currentNotification[0]]);\r\n        sortNotificationsByDate();\r\n        console.log(senderId);\r\n        await axios.put(changePath(`/notifications/changeReadedToTrue/`), { id: idOfNotification }).then(() => {\r\n            link == 1 ? history.push(`/profile/${senderId}`) : link === 2 && history.push(`/`);\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Notifications\">\r\n                {\r\n                    showNotifications &&\r\n                    <div className=\"allNotificationsContainer\" style={{ backgroundColor: \"white\" }}>\r\n                        {\r\n                            notifications.map((notification) => (\r\n                                notification.type === 4\r\n                                    ?\r\n                                    <div className=\"notificationMessagge linkNotificationToProfile opacity\" style={notification.readed ? { backgroundColor: backgroundColor2, border: \"1px solid\" + backgroundColor1, color: backgroundColor1 } : { backgroundColor: backgroundColor1, color: backgroundColor4 }} onClick={() => setReadedToTrue(notification._id, 1, notification.senderId)}>\r\n                                        <UserProfile friends={friends} idOfUser={notification.senderId} unReaded={!notification.readed} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50%\" }} />\r\n                                        <span>{notification.text}</span>\r\n                                        <span className=\"timeOfCreatedAtNotification\">{format(notification.createdAt, 'myLanguage')}</span>\r\n                                    </div>\r\n                                    :\r\n                                    notification.type === 7\r\n                                        ?\r\n                                        <div className=\"notificationMessagge linkNotificationToProfile opacity\" style={notification.readed ? { backgroundColor: backgroundColor2, border: \"1px solid\" + backgroundColor1, color: backgroundColor1 } : { backgroundColor: backgroundColor1, color: backgroundColor4 }} onClick={() => setReadedToTrue(notification._id, 2, notification.senderId)}>\r\n                                            <UserProfile friends={friends} idOfUser={notification.senderId} unReaded={!notification.readed} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50%\" }} />\r\n                                            <span>{notification.text}</span>\r\n                                            <span className=\"timeOfCreatedAtNotification\">{format(notification.createdAt, 'myLanguage')}</span>\r\n                                        </div>\r\n                                        :\r\n                                        <button className=\"notificationMessagge opacity\" style={notification.readed ? { backgroundColor: backgroundColor2, border: \"1px solid\" + backgroundColor1, color: backgroundColor1, } : { backgroundColor: backgroundColor1, color: backgroundColor4 }} onClick={() => getAndShowPost(notification.idOfPost, notification._id)}>\r\n                                            <UserProfile friends={friends} idOfUser={notification.senderId} unReaded={!notification.readed} style={{ width: \"40px\", height: \"40px\", borderRadius: \"50%\" }} />\r\n                                            <span>{notification.text}</span>\r\n                                            <span className=\"timeOfCreatedAtNotification\">{format(notification.createdAt, 'myLanguage')}</span>\r\n                                        </button>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                }\r\n                <div className=\"notificationBell scaled pointer\" onClick={() => setShowNotifications(prev => !prev)}>\r\n                    {numberOfNewNotifications > 0 && <span className=\"notificationNubmer\">{numberOfNewNotifications}</span>}\r\n                    <HiOutlineBell style={{ color: backgroundColor1, width: \"30px\", height: \"30px\" }} />\r\n                </div>\r\n            </div>\r\n            <AnimatePresence\r\n                initial={false}\r\n                exitBeforeEnter={true}\r\n                onExitComplete={() => null}\r\n            >\r\n                {\r\n                    showPost &&\r\n                    <PopupWindown classNameMain=\"mainContainerForPost\" classNameContainer=\"containerForPost\" setVisible={setShowPost}>\r\n                        <Post post={dataOfPost} />\r\n                    </PopupWindown>\r\n                }\r\n            </AnimatePresence>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notifications\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { MdAddCircleOutline } from 'react-icons/md';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Story = ({ story, type, setIsOpenAddStory, setIdOfCurrentOpenStory, setIsVisibleStoriesBook }) => {\r\n    const { onlineFriends, user } = useContext(GlobalContext);\r\n\r\n    const [userOfStory, setUserOfStory] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchDataOfUser = async () => {\r\n            if (story) {\r\n                const dataOfUser = await axios.get(changePath(`/users/getUser/${story.idOfUser}`));\r\n                setUserOfStory(dataOfUser.data);\r\n            }\r\n        }\r\n        fetchDataOfUser();\r\n    }, [story])\r\n    return (\r\n        <div className=\"Story storyWidthAndHeight\">\r\n            {\r\n                type === 1 ? (\r\n                    <div onClick={() => setIsOpenAddStory(true)} >\r\n                        <img src={user.idOrUrlOfProfilePicture ? user.idOrUrlOfProfilePicture : \"/img/anonymous.png\"} alt=\"storyImg\" className=\"storyImg storyWidthAndHeight\" />\r\n                        <div className=\"profileContainerAddStory\">\r\n                            <MdAddCircleOutline className=\"iconAddStory\" style={{ color: \"black\" }} />\r\n                            <span>Vytvořte příběh</span>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div onClick={() => { setIdOfCurrentOpenStory(story._id); setIsVisibleStoriesBook(true) }} >\r\n                        <div style={{ position: \"relative\" }}>\r\n                            {story.urlOfImg && <img src={story.urlOfImg} alt=\"storyImg\" className=\"storyImg storyWidthAndHeight\" />}\r\n                            {story.urlOfVideo &&\r\n                                <video className=\"storyImg storyWidthAndHeight\">\r\n                                    <source src={story.urlOfVideo} type='video/mp4' />\r\n                                </video>\r\n                            }\r\n                            <span className={story.position}><span style={{ padding: \"5px\" }}>{story.text}</span></span>\r\n                        </div>\r\n\r\n                        <Link to={`/profile/${userOfStory?._id}`} className=\"profileContainerStory\">\r\n                            <div className=\"profileImgMain\">\r\n                                <img src={userOfStory?.idOrUrlOfProfilePicture ? userOfStory?.idOrUrlOfProfilePicture : \"/img/anonymous.png\"} alt=\"profileImg\" className=\"profileImgStory\" />\r\n                                {onlineFriends?.some(onlineUser => onlineUser.userId === userOfStory?._id) && <div className=\"onlineUserStory\"></div>}\r\n                            </div>\r\n                            <span>{userOfStory?.username}</span>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Story","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst UploadControl = ({ children, setUrlImage, id, setNoError, addStory }) => {\r\n    const { backgroundColor1 } = useContext(GlobalContext);\r\n    return (\r\n        <label htmlFor={id} id=\"inputfileRegister\" className={`${!addStory && \"inputImgAddPost\"} opacity`} style={addStory ? { color: \"white\", margin: \"10px 0px 10px 0px\" } : { backgroundColor: backgroundColor1, color: \"white\", margin: \"10px 0px 10px 0px\" }} >\r\n            <input\r\n                style={{ display: 'none' }}\r\n                id={id}\r\n                type=\"file\"\r\n                onChange={(e) => { e.target.files[0] && setUrlImage(URL.createObjectURL(e.target.files[0])); setNoError(false) }}\r\n                accept=\"image/*\"\r\n            />\r\n            {children}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default UploadControl\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport changePath from '../../changePath';\r\nimport { GlobalContext } from '../../context/GlobalState';\r\nimport UploadControl from '../UploadControl';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { GoCheck } from 'react-icons/go';\r\nimport { MdInsertPhoto } from 'react-icons/md';\r\nimport VideoMessage from '../addMessageVariants/VideoMessage';\r\n\r\nconst CropperImage = ({ aspect, rect, saveImg, addStory, children, setCropImg, setVideo, video }) => {\r\n    const { user, backgroundColor1, backgroundColor4, socket } = useContext(GlobalContext);\r\n\r\n    const [crop, setCrop] = useState({ aspect });\r\n\r\n    const [urlImage, setUrlImage] = useState(null);\r\n\r\n    const [image, setImage] = useState(null);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    // zda se nenastala zadna chyba\r\n    const [noError, setNoError] = useState(false);\r\n\r\n    const [friends, setFriends] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getFrinends = async () => {\r\n            // nacteni pratel\r\n            const users = await axios.get(`/users/getAllFriends/${user._id}`);\r\n            setFriends(users.data);\r\n        }\r\n        getFrinends();\r\n    }, [user._id])\r\n\r\n    useEffect(() => {\r\n        setUrlImage(null);\r\n    }, [video])\r\n\r\n    const sendNotification = async (recieverId, type, url, idOfPost, text) => {\r\n        // pridani notifikace do db\r\n        console.log(\"ahoj\");\r\n        const newNotificatons = await axios.post(changePath(`/notifications/addNotification`), { senderId: user._id, recieverId, type, url, idOfPost, text });\r\n        // pridani notifikace do socket.io serveru\r\n        socket.emit(\"sendNotification\", { id: newNotificatons.data._id, senderId: user._id, recieverId, type, url, idOfPost, readed: false, text });\r\n    }\r\n\r\n    const getCroppedImg = async (onlyCrop) => {\r\n        if (!image || (crop.width === 0 && crop.height === 0)) return;\r\n        // vytvoreni canvasu\r\n        const canvas = document.createElement(\"canvas\");\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        const pixelRatio = window.devicePixelRatio;\r\n        canvas.width = crop.width * pixelRatio;\r\n        canvas.height = crop.height * pixelRatio;\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        ctx.imageSmoothingQuality = \"high\";\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height\r\n        );\r\n\r\n        if (onlyCrop) {\r\n            const base64Image = canvas.toDataURL(\"image/jpeg\");\r\n            setCropImg(base64Image);\r\n        }\r\n        else {\r\n            canvas.toBlob(async (blob) => {\r\n                blob.name = Math.floor(Date.now() / 1000);\r\n                setUrlImage(null);\r\n                await saveImg(blob, setNoError, setIsLoading, friends, sendNotification, 1);\r\n            });\r\n        }\r\n    }\r\n\r\n    const addVideo = async () => {\r\n        setUrlImage(null);\r\n        await saveImg(video, setNoError, setIsLoading, friends, sendNotification, 2);\r\n    }\r\n\r\n    return (\r\n        <div className=\"CropperImage\">\r\n            <div className='actionsMethods'>\r\n                <UploadControl addStory={addStory} setUrlImage={setUrlImage} setNoError={setNoError} id={rect ? \"addCoverPicture\" : \"addProfilePicture\"}>\r\n                    {addStory\r\n                        ?\r\n                        <div id=\"inputfileRegister\" className=\"buttonsForVariantsMessage opacity\" style={{ color: backgroundColor4, backgroundColor: backgroundColor1 }} >\r\n                            <MdInsertPhoto className='reactIcon' />\r\n                        </div>\r\n                        :\r\n                        <span className=\"opacity\" style={{ color: backgroundColor4 }}>vyber obrázek</span>\r\n                    }\r\n                </UploadControl>\r\n                {addStory && <VideoMessage setVideoFile={setVideo} />}\r\n            </div>\r\n\r\n            {\r\n\r\n                urlImage && (\r\n                    <>\r\n                        {\r\n                            addStory ?\r\n                                <ReactCrop src={urlImage}\r\n                                    onImageLoaded={setImage}\r\n                                    crop={crop}\r\n                                    onChange={newCrop => { setCrop(newCrop); getCroppedImg(true) }}\r\n                                    style={{ minWidth: \"120px\", maxWidth: \"240px\", minHeight: \"150px\", maxHeight: \"300px\", objectFit: \"cover\" }}\r\n                                >\r\n                                    {children}\r\n                                </ReactCrop>\r\n                                :\r\n                                rect ? (\r\n                                    <ReactCrop src={urlImage}\r\n                                        onImageLoaded={setImage}\r\n                                        crop={crop}\r\n                                        onChange={newCrop => setCrop(newCrop)}\r\n                                        style={{ width: \"80%\", height: \"auto\" }}\r\n                                    />\r\n                                ) :\r\n                                    (\r\n                                        <ReactCrop src={urlImage}\r\n                                            onImageLoaded={setImage}\r\n                                            crop={crop}\r\n                                            onChange={newCrop => setCrop(newCrop)}\r\n                                            style={{ width: \"250px\", height: \"auto\" }}\r\n                                            circularCrop\r\n                                        />\r\n                                    )\r\n                        }\r\n\r\n                    </>\r\n                )\r\n            }\r\n            <button onClick={() => urlImage ? getCroppedImg() : video && addVideo()} className=\"inputImgAddPost opacity\" style={{ backgroundColor: backgroundColor1, color: backgroundColor4, margin: \"10px 0px 0px 0px\" }} >{!isLoading ? (noError ? <div className=\"correctAnimation\"><GoCheck size={15} /></div> : (addStory ? \"přidat příběh\" : rect ? \"změnit fotku na pozadí\" : \"změnit profilovou fotku\")) : <ClipLoader color={backgroundColor4} size={10}></ClipLoader>}</button>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default CropperImage\r\n","import axios from 'axios';\r\nimport EmojiPicker from './addMessageVariants/EmojiPicker';\r\nimport React, { useContext, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { downloadUrlImg, uploadImg } from '../storageImgActions/imgFunctions';\r\nimport CropperImage from './global/CropperImage'\r\nimport PopupWindown from './global/PopupWindown'\r\nimport { TiDelete } from 'react-icons/ti';\r\n\r\nconst AddStory = ({ setIsOpenAddStory }) => {\r\n\r\n  const { user, backgroundColor1, backgroundColor2 } = useContext(GlobalContext);\r\n\r\n  const [cropImg, setCropImg] = useState(null);\r\n  const [video, setVideo] = useState(null);\r\n\r\n  // promenne pro praci s textem na obrazku\r\n  const [valueOfInput, setValueOfInput] = useState(\"\");\r\n  const [valueOfPlace, setValueOfPlace] = useState(\"mid\");\r\n\r\n\r\n  const getNewCroppedPicture = async (file, setNoError, setIsLoading, friends, sendNotification, type) => {\r\n    setIsLoading(true);\r\n    const newFileName = \"stories/\" + user.username + \"/\" + file.name + \"\" + Math.floor(Date.now() / 1000);\r\n    // soubor se ulozi do storage\r\n    await uploadImg(file, newFileName).then(async () => {\r\n      console.log('upload file succesfully');\r\n      // stahnuti url souboru\r\n      const urlOfFile = await downloadUrlImg(newFileName);\r\n      await addNewStory(urlOfFile, friends, sendNotification, type);\r\n      setIsLoading(false);\r\n      setNoError(true);\r\n    })\r\n  }\r\n  // funkce pro vytvoeni ulozeni prispevku do databaze\r\n  const addNewStory = async (file, friends, sendNotification, type) => {\r\n    try {\r\n      // vytvoreni promenne ve ktere budou data prispevku\r\n      const newStory = {\r\n        idOfUser: user._id,\r\n        urlOfImg: type === 1 ? file : null,\r\n        urlOfVideo: type === 2 ? file : null,\r\n        text: valueOfInput,\r\n        position: valueOfPlace,\r\n      }\r\n      // kdyz vse probehne v poradku tak se vytvori samotny prispevek v databazi prispevku\r\n      const dataOfNewStory = await axios.post(changePath(\"/stories/addStory\"), newStory);\r\n\r\n      // vsem nasim pratelum posleme notifikaci\r\n      new Promise(() => {\r\n        friends.forEach(async (friend, index) => {\r\n          await sendNotification(friend._id, 7, null, dataOfNewStory.data._id, \"přidal/a nový příběh\");\r\n          if (index === friends.length - 1) { window.location.reload(); }\r\n        })\r\n      }\r\n      );\r\n\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PopupWindown classNameMain=\"AddStory\" classNameContainer=\"shareContainer\" setVisible={setIsOpenAddStory}>\r\n      <div className=\"mainContainerSettingsStory\">\r\n        <div className=\"settingsStory\">\r\n          <div className='inputEmojiPickerContainer'>\r\n            <input type=\"text\" className=\"inputInfo\" style={{ backgroundColor: backgroundColor2, color: backgroundColor1 }} placeholder=\"něco k příběhu...\" value={valueOfInput} onChange={(e) => { setValueOfInput(e.target.value) }} />\r\n            <EmojiPicker setValOfText={setValueOfInput} />\r\n          </div>\r\n          <select onChange={(e) => { setValueOfPlace(e.target.value) }} className=\"inputInfo\" style={{ backgroundColor: backgroundColor2, color: backgroundColor1 }} >\r\n            <option value=\"top\" >nahoře</option>\r\n            <option value=\"mid\" selected >upřostřed</option>\r\n            <option value=\"bot\" >dole</option>\r\n          </select>\r\n          {\r\n            video && (\r\n              <div className=\"imgShowContainerAddPost\" style={{ position: \"relative\" }} >\r\n                <span className={valueOfPlace}><span style={{ padding: \"5px\" }}>{valueOfInput}</span></span>\r\n                <video className=\"videoShowAddStory\" autoPlay loop>\r\n                  <source src={URL.createObjectURL(video)} type='video/mp4' />\r\n                </video>\r\n                <TiDelete className=\"removeImgShow scaled\" onClick={(e) => { setVideo(null) }} />\r\n              </div>\r\n            )\r\n          }\r\n          {cropImg &&\r\n            <div style={{ position: \"relative\" }}>\r\n              <img alt=\"\" style={{ width: \"120px\", height: \"200px\" }} src={cropImg} />\r\n              <TiDelete className=\"removeImgShow scaled\" onClick={(e) => { setCropImg(null) }} />\r\n              <span className={valueOfPlace}><span style={{ padding: \"5px\" }}>{valueOfInput}</span></span>\r\n            </div>\r\n          }\r\n        </div>\r\n        <div className=\"displayStory\">\r\n          <h4 style={{ color: backgroundColor1 }}>Vyber část na obrázku</h4>\r\n          <CropperImage aspect={6 / 10} rect={true} addStory={true} saveImg={getNewCroppedPicture} valueOfPlace={valueOfPlace} setCropImg={setCropImg} setVideo={setVideo} video={video}>\r\n\r\n          </CropperImage>\r\n        </div>\r\n      </div>\r\n    </PopupWindown>\r\n  )\r\n}\r\n\r\nexport default AddStory","import React, { useContext, useEffect, useState } from 'react'\r\nimport PopupWindown from './global/PopupWindown';\r\nimport { motion } from 'framer-motion';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StoriesBook = ({ users, idOfCurrentOpenStory, setIsVisibleStoriesBook, allStories }) => {\r\n    const { onlineFriends } = useContext(GlobalContext);\r\n\r\n    const [indexOfStory, setIndexOfStory] = useState(allStories.findIndex((storie) => storie._id === idOfCurrentOpenStory))\r\n    const [userOfStory, setUserOfStory] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchDataOfUser = async () => {\r\n\r\n            const dataOfUser = users.filter(user => user._id === allStories[indexOfStory].idOfUser)[0];\r\n            console.log(dataOfUser);\r\n            setUserOfStory(dataOfUser);\r\n        }\r\n        fetchDataOfUser();\r\n    }, [indexOfStory, allStories])\r\n\r\n    const nextStory = () => {\r\n        if (indexOfStory === allStories.length - 1) {\r\n            setIndexOfStory(0);\r\n        } else {\r\n            setIndexOfStory(prev => prev + 1);\r\n        }\r\n    }\r\n    const prevStory = () => {\r\n        if (indexOfStory > 0) {\r\n            setIndexOfStory(prev => prev - 1);\r\n        } else {\r\n            setIndexOfStory(allStories.length - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PopupWindown classNameMain=\"StoryBook\" classNameContainer=\"storyBookContainer\" setVisible={setIsVisibleStoriesBook}>\r\n            <motion.div className=\"mainContainerStoryBook\"\r\n                initial={{ rotate: 45 }}\r\n                animate={{ rotate: 0 }}\r\n                exit={{ rotate: -45 }}\r\n            >\r\n                {allStories[indexOfStory].urlOfVideo &&\r\n                    <video className=\"storyImg storyBookImgWidthAndHeight\" autoPlay loop>\r\n                        <source src={allStories[indexOfStory].urlOfVideo} type='video/mp4' />\r\n                    </video>\r\n                    //<iframe allow='autoplay' loop=\"true\" src={allStories[indexOfStory].urlOfVideo + \"?autoplay=1\"} alt=\"video/obrázek nelze najít\"  referrerPolicy=\"no-referrer\" ></iframe>\r\n                }\r\n                {allStories[indexOfStory].urlOfImg && <img src={allStories[indexOfStory].urlOfImg} alt=\"storyImg\" className=\"storyImg storyBookImgWidthAndHeight\" />}\r\n                <span className={allStories[indexOfStory].position}><h2 style={{ padding: \"5px\" }}>{allStories[indexOfStory].text}</h2></span>\r\n                <Link to={`/profile/${userOfStory?._id}`} className=\"profileContainerStory\">\r\n                    <div className=\"profileImgMain\">\r\n                        <img src={userOfStory?.idOrUrlOfProfilePicture ? userOfStory?.idOrUrlOfProfilePicture : \"/img/anonymous.png\"} alt=\"profileImg\" className=\"profileImgStory\" />\r\n                        {onlineFriends?.some(onlineUser => onlineUser.userId === userOfStory?._id) && <div className=\"onlineUserStory\"></div>}\r\n                    </div>\r\n                    <span>{userOfStory?.username}</span>\r\n                </Link>\r\n            </motion.div>\r\n            {allStories.length > 1 &&\r\n                <>\r\n                    <IoIosArrowBack onClick={() => prevStory()} className=\"buttonNext buttonStoryBook\" />\r\n                    <IoIosArrowForward onClick={() => nextStory()} className=\"buttonPrev buttonStoryBook\" />\r\n                </>\r\n            }\r\n        </PopupWindown>\r\n    )\r\n}\r\n\r\nexport default StoriesBook","import axios from 'axios';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport Story from './Story';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport AddStory from './AddStory';\r\nimport StoriesBook from './StoriesBook';\r\n\r\nconst StoriesMain = () => {\r\n    const { user } = useContext(GlobalContext);\r\n    const [allStories, setAllStories] = useState([]);\r\n    const [width, setWidth] = useState(0);\r\n    const carouselMain = useRef();\r\n    const [isOpenAddStory, setIsOpenAddStory] = useState(false);\r\n    const [idOfCurrentOpenStory, setIdOfCurrentOpenStory] = useState(null);\r\n    const [isVisibleStoriesBook, setIsVisibleStoriesBook] = useState(false);\r\n    const [usersOfStory, setUsersOfStory] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAllStories = async () => {\r\n            const stories = await axios.get(changePath(`/stories/getAllStories/${user._id}`));\r\n\r\n            const usersIdData = [];\r\n            stories.data.forEach(story => {\r\n                usersIdData.push(story.idOfUser);\r\n            });\r\n            const uniqueUsersIdData = [...new Set(usersIdData)]; // odstraneni duplicitnich hodnot (id uzivatelu)\r\n            const usersIdPostData = await axios.post(changePath(`/users/getAllUsersData`), { users: uniqueUsersIdData }); // nacteni dat vsech vlastniku story\r\n            setUsersOfStory(usersIdPostData.data);\r\n            setAllStories(stories.data);\r\n\r\n        }\r\n        fetchAllStories();\r\n    }, [user._id])\r\n\r\n    useEffect(() => {\r\n        setWidth(carouselMain.current.scrollWidth - carouselMain.current.offsetWidth);\r\n    }, [allStories])\r\n\r\n\r\n    return (\r\n        <div className=\"StoriesMain\" ref={carouselMain} whiletap={{ cursor: \"grabbing\" }}>\r\n            <motion.div\r\n                drag=\"x\"\r\n                dragConstraints={{ right: 0, left: -width }}\r\n                className=\"stories\"\r\n            >\r\n                <Story type={1} setIsOpenAddStory={setIsOpenAddStory} />\r\n                {\r\n                    allStories?.map((story) => (\r\n                        <Story story={story} key={story._id} setIdOfCurrentOpenStory={setIdOfCurrentOpenStory} setIsVisibleStoriesBook={setIsVisibleStoriesBook} />\r\n                    ))\r\n                }\r\n            </motion.div>\r\n            <AnimatePresence\r\n                initial={false}\r\n                exitBeforeEnter={true}\r\n                onExitComplete={() => null}\r\n            >\r\n                {\r\n                    isOpenAddStory &&\r\n                    <AddStory setIsOpenAddStory={setIsOpenAddStory} />\r\n                }\r\n                {\r\n                    isVisibleStoriesBook &&\r\n                    <StoriesBook users={usersOfStory} idOfCurrentOpenStory={idOfCurrentOpenStory} setIsVisibleStoriesBook={setIsVisibleStoriesBook} allStories={allStories} />\r\n                }\r\n            </AnimatePresence>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StoriesMain","import React, { useContext, useEffect, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport TopBarHome from '../components/TopBarHome';\r\nimport SwiperOnlineFriends from '../components/SwiperOnlineFriends';\r\nimport AddNewPost from '../components/AddNewPost';\r\nimport axios from 'axios';\r\nimport Post from '../components/Post';\r\nimport Notifications from '../components/Notifications';\r\nimport StoriesMain from '../components/StoriesMain';\r\nimport changePath from '../changePath';\r\n\r\nconst Home = () => {\r\n    const { user } = useContext(GlobalContext);\r\n    const [posts, setPosts] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [usersIdOfPost, setUsersIdOfPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            // nacteni postu naseho uzivatele\r\n            const posts = await axios.get(`/posts/getAllPosts/${user._id}`)\r\n\r\n            const usersIdData = [];\r\n            posts.data.forEach(post => {\r\n                usersIdData.push(post.userId);\r\n            });\r\n            const uniqueUsersIdData = [...new Set(usersIdData)]; // odstraneni duplicitnich hodnot (id uzivatelu)\r\n            const usersIdPostData = await axios.post(changePath(`/users/getAllUsersData`), { users: uniqueUsersIdData }); // nacteni dat vsech vlastniku postu\r\n            setUsersIdOfPost(usersIdPostData.data);\r\n\r\n            // serazeni od nejnovejsich postu po ty uplne posledni \r\n            const sortPosts = posts.data.sort((p1, p2) => { return new Date(p2.createdAt) - new Date(p1.createdAt) });\r\n            setPosts(sortPosts);\r\n        }\r\n        getPosts();\r\n    }, [user._id])\r\n\r\n    useEffect(() => {\r\n        const getFrinends = async () => {\r\n            // nacteni pratel\r\n            const users = await axios.get(`/users/getAllFriends/${user._id}`);\r\n            setUsers(users.data);\r\n        }\r\n        getFrinends();\r\n    }, [user._id])\r\n\r\n\r\n    return (\r\n        <div className=\"homeContainer\">\r\n            <TopBarHome />\r\n            <SwiperOnlineFriends users={users} type={1} />\r\n\r\n            <div className=\"homeContainerPostsMain\">\r\n                <div className=\"homeContainerPosts\">\r\n                    <StoriesMain />\r\n                    <AddNewPost friends={users} />\r\n                    {\r\n                        posts?.map((post, index) => (\r\n                            <Post post={post} key={index} userOfPost={usersIdOfPost.filter(user => user._id === post.userId)[0]} />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <SwiperOnlineFriends users={users} className=\"pc\" type={2} />\r\n            </div>\r\n            <Notifications />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios';\r\nimport React, { useContext, useRef, useState } from 'react'\r\nimport { AiOutlineArrowRight } from 'react-icons/ai';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport changePath from '../changePath';\r\nimport ButtonGoogleLogIn from '../components/ButtonGoogleLogIn';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport validator from 'validator';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Login = () => {\r\n    const {setUser, setColors, backgroundColor1, backgroundColor2} = useContext(GlobalContext);\r\n\r\n    // promenna useState jesli se nacita stranka\r\n    const [ifWaiting, setIfWaiting] = useState(false);\r\n\r\n    // promenne useState pro chybove hlasky\r\n    const [errEmail, setErrEmail] = useState(\"\");\r\n    const [errPassword, setErrPassword] = useState(\"\");\r\n    const [wrongPasswordOrEmail, setWrongPasswordOrEmail] = useState(false);\r\n\r\n    // promenne useRef\r\n    const email = useRef(null);\r\n    const password = useRef(null);\r\n\r\n    // useHistory ( pouziva se k presmerovani stranky)\r\n    const history = useHistory();\r\n\r\n    // funkce \r\n\r\n    // zkontrolovani dat ve formulari a ulozeni chybove hlasky\r\n    const checkInput = async (what, value) => {\r\n        // what 1 email   2 password   \r\n        what === 1 && (value !== \"\" ? (validator.isEmail(value) ? setErrEmail(null) : setErrEmail(\"neplatný email\")) : setErrEmail(\"email je povinný\"));\r\n        what === 2 && (value !== \"\" ? setErrPassword(null) : setErrPassword(\"heslo je povinné\"));\r\n    }\r\n\r\n    const logIn = async () => {\r\n        // zjisteni jestli data ve formulari jsou sparvna \r\n        const isItRight = ((!errEmail && !errPassword) && (errEmail !== \"\" && errPassword !== \"\")) ? true : false;\r\n\r\n        // jeslit jsou data spravna pokracujeme v prihlaseni\r\n        if(isItRight) {\r\n            try {\r\n                // nacitani nastavime na true\r\n                setIfWaiting(true);\r\n\r\n                const data = {\r\n                    email: email.current.value, \r\n                    password: password.current.value\r\n                }\r\n                // zjisteni jeslit uzivatel existuje a email i heslo se shoduje\r\n                const newUser = await axios.post(changePath(\"/users/login\"), data);\r\n                    \r\n                const newUserData = newUser.data;\r\n                    \r\n                // ulozeni uzivatele do local storage aby uzivatel byl ulozeny i po refreshnuti stranky\r\n                localStorage.setItem(\"user\", JSON.stringify(newUserData));\r\n\r\n                // zjisteni zda existuje UserColors\r\n                const ifExistUserColors = await axios.get(changePath(`userColors/ifUserColorsExist/${newUserData._id}`))\r\n                // jestli existuej tak ulozime do local storage a take do context api barvy uzivatele\r\n                if(ifExistUserColors.data) {\r\n                    localStorage.setItem(\"colors\", JSON.stringify({backgroundColor1: ifExistUserColors.data.backgroundColor1, backgroundColor2: ifExistUserColors.data.backgroundColor2, backgroundColor3: ifExistUserColors.data.backgroundColor3, backgroundColor4: ifExistUserColors.data.backgroundColor4}));\r\n                    setColors({backgroundColor1: ifExistUserColors.data.backgroundColor1, backgroundColor2: ifExistUserColors.data.backgroundColor2, backgroundColor3: ifExistUserColors.data.backgroundColor3, backgroundColor4: ifExistUserColors.data.backgroundColor4});\r\n                } \r\n                \r\n                // volani funkce v GlobalProvider a ulozeni uzivatele do initialState\r\n                setUser(newUserData);\r\n            \r\n                // presmerovani na stranku home\r\n                history.push(\"/\");\r\n            } catch (err) {\r\n                // jestli se nepodari prihlasit uzivatele nastavime nacitani na false \r\n                setIfWaiting(false);\r\n                setWrongPasswordOrEmail(true);\r\n            }\r\n            \r\n        } else {\r\n            // jeslit data nejsou spravna zkontrolujeme chyby\r\n            errEmail === \"\" && checkInput(1, \"\");\r\n            errPassword === \"\" && checkInput(2, \"\");\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <div className=\"loginContainer\">\r\n                \r\n                <div className=\"rotateDiv1\" style={{backgroundColor: backgroundColor1}}></div>\r\n                <div className=\"rotateDiv2\" style={{backgroundColor: backgroundColor1}}></div>\r\n                <div className=\"loginForm\">\r\n                    \r\n                    <h2 style={{color: backgroundColor1}}>Přihlásit se</h2>\r\n\r\n                    <input className=\"inputRegister\" onChange={(e) => { checkInput(1, e.target.value)}} ref={email} style={{backgroundColor: backgroundColor2, color: backgroundColor1}} type=\"email\" placeholder=\"email\"/>\r\n                    {(errEmail !== \"\" && errEmail) && <span className=\"errorMessage\">{errEmail}</span>}\r\n                    <input className=\"inputRegister\" onChange={(e) => { checkInput(2, e.target.value)}} ref={password} style={{backgroundColor: backgroundColor2, color: backgroundColor1}} type=\"password\" placeholder=\"heslo\"/>\r\n                    {(errPassword  !== \"\" && errPassword) && <span className=\"errorMessage\">{errPassword}</span>}\r\n                    {wrongPasswordOrEmail && <span className=\"errorMessage\">špatné heslo nebo email</span>}\r\n                    <button className=\"buttonRegister inputRegister\" style={{backgroundColor: backgroundColor1, color: \"white\"}} onClick={logIn}>{!ifWaiting ? \"Přihlásit\" : <ClipLoader color={backgroundColor2} size={10} />}</button> <br/>\r\n                    <span>nebo</span> \r\n\r\n                    <ButtonGoogleLogIn />\r\n                    <Link to=\"/register\" className=\"goToLogInButton inputRegister\" style={{backgroundColor: backgroundColor1}}>{!ifWaiting ? (<><span>Registrovat</span><AiOutlineArrowRight className=\"ArrowImg\"/></>) : <ClipLoader color={backgroundColor2} size={10} />}</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport {IoMdRemove, IoMdAdd, IoMdCheckmark, IoMdClose} from 'react-icons/io';\r\n\r\nconst ButtonForActionsFriend = ({removeFriend, ifAreFriends, myUser, idOfUser, addOrRemoveRequestToUser, ifSendRequest, confirmRequest}) => {\r\n    const {backgroundColor1} = useContext(GlobalContext);\r\n    return (\r\n        <>\r\n            {\r\n            ifAreFriends \r\n            ?  \r\n            <button className=\"buttonForActionsFriend opacity\" style={{backgroundColor: backgroundColor1, color: \"white\"}} onClick={removeFriend}><IoMdClose style={{fontSize: \"20px\"}}/>odebrat přítele</button> \r\n            :\r\n            myUser?.idOfRequests?.includes(idOfUser)\r\n            ? \r\n            <button className=\"buttonForActionsFriend opacity\" style={{backgroundColor: backgroundColor1, color: \"white\"}} onClick={() => confirmRequest(idOfUser ,myUser._id)}><IoMdCheckmark style={{fontSize: \"20px\"}}/>přijmout žádost</button> \r\n            : \r\n            <button className=\"buttonForActionsFriend opacity\" style={{backgroundColor: backgroundColor1, color: \"white\"}} onClick={addOrRemoveRequestToUser}>{ifSendRequest ? (<><IoMdRemove style={{fontSize: \"20px\"}} /> odebrat žádost</>) : <><IoMdAdd style={{fontSize: \"20px\"}}/>poslat žádost</> }</button>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonForActionsFriend\r\n","import React from 'react'\r\nimport ButtonForActionsFriend from './ButtonForActionsFriend'\r\n\r\nconst TopProfile = ({urlOfProfileImg, urlOfCoverImg, user, removeFriend, ifAreFriends, myUser, idOfUser, addOrRemoveRequestToUser, ifSendRequest, confirmRequest}) => {\r\n    return (\r\n        <div className=\"topProfile\" style={idOfUser !== user._id ? {marginBottom: \"50px\"} : {}}>\r\n            <img className=\"topProfileBackgroundPicture\" src={urlOfCoverImg ? urlOfCoverImg : \"/img/wallpaperNone.jpg\"} alt=\"\"/>\r\n            <img className=\"topProfileProfilePicture\" src={urlOfProfileImg ? urlOfProfileImg : \"/img/anonymous.png\"} alt=\"\" />\r\n            \r\n            { \r\n            idOfUser === user._id &&\r\n            (\r\n                <div className=\"bottomProfile\">\r\n                    <span style={{marginRight: \"10px\"}}>{user.username}</span>\r\n                    <ButtonForActionsFriend removeFriend={removeFriend} ifAreFriends={ifAreFriends} myUser={myUser} idOfUser={idOfUser} addOrRemoveRequestToUser={addOrRemoveRequestToUser} ifSendRequest={ifSendRequest} confirmRequest={confirmRequest} />                 \r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopProfile\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport UserProfile from './UserProfile'\r\n\r\nconst ProfileRequests = ({idOfRequests, confirmRequest}) => {\r\n\r\n    const {backgroundColor1} = useContext(GlobalContext);\r\n    return (\r\n        <div className=\"requestsContainer\">\r\n            {\r\n                idOfRequests.map(id => (\r\n                    <div className=\"requests\" key={id}>\r\n                        <UserProfile idOfUser={id} style={{width: \"50px\", height: \"50px\", borderRadius: \"50%\", objectFit: \"cover\"}} />\r\n                        <button onClick={() => confirmRequest(id)} style={{backgroundColor: backgroundColor1}} className=\"buttonConfirmFriendShip\">přijmout žádost o přátelství</button>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileRequests\r\n","import axios from 'axios';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport React, { useEffect, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport PopupWindown from './global/PopupWindown';\r\n\r\nconst ImagesOfUser = ({ user }) => {\r\n    const [urlOfImages, setUrlOfImages] = useState([]);\r\n\r\n    const [openPopupWidnown, setOpenPopupWidnown] = useState(false);\r\n    const [urlOfChoseImg, setUrlOfChoseImg] = useState(\"second\");\r\n\r\n    useEffect(() => {\r\n        // nacteni url vsech obrazku uzivatele\r\n        const getUrlOfImages = async () => {\r\n            setUrlOfImages([]);\r\n            await user?.idOfAllPicture?.map(async (idOfImage) => {\r\n                const image = await axios.get(changePath(`/images/getImg/${idOfImage}`));\r\n                const dataOfImage = image.data;\r\n\r\n                setUrlOfImages(data => [...data, dataOfImage.url]);\r\n            })\r\n        }\r\n        getUrlOfImages();\r\n    }, [user.idOfAllPicture]);\r\n\r\n    const openPopupWindownImg = (idOfImage) => {\r\n        setOpenPopupWidnown(true);\r\n        setUrlOfChoseImg(idOfImage);\r\n    }\r\n\r\n    return (\r\n        <div className=\"profileImages\">\r\n            <div className=\"profileImagesContainer\">\r\n                {\r\n                    urlOfImages?.map((idOfImage) => (\r\n                        <img src={idOfImage} onClick={() => openPopupWindownImg(idOfImage)} alt=\"allPicture\" style={{ width: \"70px\", height: \"70px\", objectFit: \"cover\" }} />\r\n                    ))\r\n                }\r\n\r\n                <AnimatePresence\r\n                    initial={false}\r\n                    exitBeforeEnter={true}\r\n                    onExitComplete={() => null}\r\n                >\r\n                    {openPopupWidnown &&\r\n                        <PopupWindown classNameMain=\"Share\" classNameContainer=\"shareContainer\" setVisible={setOpenPopupWidnown} >\r\n                            <img src={urlOfChoseImg} alt=\"\" />\r\n                        </PopupWindown>}\r\n                </AnimatePresence>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagesOfUser\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst UserInfo = ({ user }) => {\r\n    const { backgroundColor1 } = useContext(GlobalContext);\r\n\r\n    const [info, setInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // nacteni infa\r\n        const getInfoAboutUser = async () => {\r\n            setInfo([]);\r\n            const newInfo = await axios.get(changePath(`/userInfos/getUserInfo/${user._id}`));\r\n            setInfo(newInfo.data);\r\n        }\r\n        getInfoAboutUser();\r\n    }, [user.idOfAllPicture, user._id]);\r\n\r\n    return (\r\n        <div className=\"profileInfoContainers\">\r\n            {\r\n                info?.length === 0 ? \r\n                <>\r\n                    <div className=\"profileInfoContainers\">\r\n                        <span>Popis:</span>\r\n                        <span style={{color: backgroundColor1, fontWeight: \"500\"}}> - </span>\r\n                    </div>\r\n                    <div className=\"profileInfoContainers\">\r\n                        <span>Bydlí v:</span>\r\n                        <span style={{color: backgroundColor1, fontWeight: \"500\"}}> - </span>\r\n\r\n                    </div>\r\n                    <div className=\"profileInfoContainers\">\r\n                        <span>Vztah:</span>\r\n                        <span style={{ color: backgroundColor1, fontWeight: \"500\" }}> - </span>\r\n                    </div> \r\n                </>\r\n                :\r\n                <>\r\n                    <div className=\"profileInfoContainers\">\r\n                        <span>Popis:</span>\r\n                        <span style={{color: backgroundColor1, fontWeight: \"500\"}}>{info.desc}</span>\r\n                    </div>\r\n                    <div className=\"profileInfoContainers\">\r\n                        <span>Bydlí v:</span>\r\n                        <span style={{color: backgroundColor1, fontWeight: \"500\"}}>{info.from}</span>\r\n\r\n                    </div>\r\n                    <div className=\"profileInfoContainers\">\r\n                        <span>Vztah:</span>\r\n                        <span style={{ color: backgroundColor1, fontWeight: \"500\" }}>{info.relationShip}</span>\r\n                    </div> \r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport TopBarHome from '../components/TopBarHome';\r\nimport TopProfile from '../components/TopProfile';\r\nimport ProfileRequests from '../components/ProfileRequests';\r\nimport SwiperOnlineFriends from '../components/SwiperOnlineFriends';\r\nimport AddNewPost from '../components/AddNewPost';\r\nimport Post from '../components/Post';\r\nimport { Link } from 'react-router-dom';\r\nimport ImagesOfUser from '../components/ImagesOfUser';\r\nimport UserInfo from '../components/UserInfo';\r\nimport Notifications from '../components/Notifications';\r\n\r\nconst Profile = () => {\r\n    const { user, socket, backgroundColor1, backgroundColor4 } = useContext(GlobalContext);\r\n    // promenna useParams, z url adresy jsme dostali promennou idOfUser\r\n    const { idOfUser } = useParams();\r\n    // useState promenne\r\n\r\n    // prihlaseny uzivatel\r\n    const [myUser, setMyUser] = useState([]);\r\n\r\n    // promenna pro url profiloveho obrazku\r\n    const [urlOfProfileImg, setUrlOfProfileImg] = useState(\"\");\r\n\r\n    // promenna pro url obrazku na pozadi\r\n    const [urlOfCoverImg, setUrlOfCoverImg] = useState(\"\");\r\n\r\n    // zda jsou v pratelstvi\r\n    const [ifAreFriends, setIfAreFriends] = useState(null);\r\n\r\n    // zda uz uzivatel poslal zadost o pratelstvi\r\n    const [ifSendRequest, setIfSendRequtest] = useState(null);\r\n\r\n    // vsichni kamaradi daneho uzivatele\r\n    const [allFriends, setAllFriends] = useState([]);\r\n\r\n    // vsichni kamaradi daneho uzivatele\r\n    const [arrayIdOfFriends, setArrayIdOfFriends] = useState([]);\r\n\r\n    // vsechny postu vztazene k danemu uzivateli\r\n    const [allPosts, setAllPosts] = useState([]);\r\n\r\n    // vlastnik profilu na ktery koukame\r\n    const [currentUser, setCurrentUser] = useState([]);\r\n\r\n    const [usersIdOfPost, setUsersIdOfPost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const downloadUrl = async () => {\r\n            // jestli uzivatel kouka ne jaho profil\r\n            if (idOfUser === user._id) {\r\n                // ziskame nase url profiloveho obrazku\r\n                setUrlOfProfileImg(user.idOrUrlOfProfilePicture);\r\n                // ziskame jeho url obrazku na pozadi\r\n                setUrlOfCoverImg(user.idOrUrlOfCoverPicture);\r\n            } else {\r\n                // ziskame data profilu na ktery prave koukame\r\n                const currentUser = await axios.get(changePath(`/users/getUser/${idOfUser}`));\r\n\r\n                // ulozime vlastnika profilu\r\n                setCurrentUser(currentUser.data);\r\n                // ziskame jeho url profiloveho obrazku\r\n                setUrlOfProfileImg(currentUser.data.idOrUrlOfProfilePicture);\r\n\r\n                // ziskame jeho url obrazku na pozadi\r\n                setUrlOfCoverImg(currentUser.data.idOrUrlOfCoverPicture);\r\n            }\r\n\r\n        }\r\n        downloadUrl();\r\n    }, [idOfUser, user])\r\n\r\n    useEffect(() => {\r\n        const downloadDataOfUser = async () => {\r\n            // ziskame data prave prihlaseneho uzivatele\r\n            const myUser = await axios.get(changePath(`/users/getUser/${user._id}`));\r\n            setMyUser(myUser.data);\r\n            setArrayIdOfFriends(myUser.data.idOfRequests);\r\n        }\r\n        downloadDataOfUser();\r\n    }, [idOfUser, user._id])\r\n\r\n    useEffect(() => {\r\n        const setValueOfVariables = async () => {\r\n            // ziskame data profilu na ktery prave koukame\r\n            const currentUser = await axios.get(changePath(`/users/getUser/${idOfUser}`));\r\n            await downloadUsers(currentUser.data);\r\n            // zjistime zda jsme pratele \r\n            setIfAreFriends(currentUser.data.idOfFriends.includes(user._id));\r\n            // zjistime zda jsem mu neposlal zadost o pratelstvi\r\n            setIfSendRequtest(currentUser.data.idOfRequests.includes(user._id));\r\n        }\r\n        setValueOfVariables();\r\n    }, [idOfUser, user._id])\r\n\r\n    useEffect(() => {\r\n        const getAllPosts = async () => {\r\n            const posts = await axios.get(changePath(`/posts/getPosts/${idOfUser}`));\r\n\r\n            const usersIdData = [];\r\n            posts.data.forEach(post => {\r\n                usersIdData.push(post.userId);\r\n            });\r\n            const uniqueUsersIdData = [...new Set(usersIdData)]; // odstraneni duplicitnich hodnot (id uzivatelu)\r\n            const usersIdPostData = await axios.post(changePath(`/users/getAllUsersData`), { users: uniqueUsersIdData }); // nacteni dat vsech vlastniku postu\r\n            setUsersIdOfPost(usersIdPostData.data);\r\n\r\n            // serazeni od nejnovejsich postu po ty uplne posledni\r\n            const sortPosts = posts.data.sort((p1, p2) => { return new Date(p2.createdAt) - new Date(p1.createdAt) });\r\n            setAllPosts(sortPosts);\r\n        }\r\n        getAllPosts();\r\n    }, [idOfUser])\r\n\r\n    // funkce\r\n\r\n    // stahnuti dat vsech kamaradu daneho uzivatele\r\n    const downloadUsers = async (currentUser) => {\r\n        setAllFriends([]);\r\n        const newAllFriends = await axios.get(changePath(`/users/getAllFriends/${currentUser._id}`))\r\n        setAllFriends(newAllFriends.data);\r\n    }\r\n\r\n\r\n    // pridani nebo odebrani zadosti \r\n    const addOrRemoveRequestToUser = async () => {\r\n        if (ifSendRequest) {\r\n            sendNotification(idOfUser, 4, `/profile/${idOfUser}`, null, \"odebral žádost o přátelství\");\r\n        } else {\r\n            sendNotification(idOfUser, 4, `/profile/${idOfUser}`, null, \"poslal žádost o prátelství\");\r\n        }\r\n\r\n\r\n        setIfSendRequtest(!ifSendRequest);\r\n        await axios.put(changePath(`/users/addOrRemoveRequest/${idOfUser}/${user._id}`));\r\n    }\r\n\r\n    // prijmuti zadosti\r\n    const confirmRequest = async (id, myUserId) => {\r\n        const userOfRequest = await axios.get(changePath(`/users/getUser/${myUserId ? myUserId : id}`));\r\n        setArrayIdOfFriends(arrayIdOfFriends.filter(idOfrequests => idOfrequests !== id));\r\n        setAllFriends(friends => [...friends, userOfRequest.data]);\r\n        //console.log(allFriends);\r\n        setIfAreFriends(true);\r\n        await axios.put(changePath(`/users/addFriend/${id}/${user._id}`));\r\n        sendNotification(id, 4, `/profile/${id}`, null, \"nyní jste přátelé\");\r\n    }\r\n\r\n    // zruseni pratelstvi\r\n    const removeFriend = async () => {\r\n        setIfAreFriends(false);\r\n        setAllFriends((allFriends.filter(friends => friends._id !== user._id)));\r\n        await axios.put(changePath(`/users/removeFriend/${idOfUser}/${user._id}`));\r\n    }\r\n\r\n    const sendNotification = async (recieverId, type, url, idOfPost, text) => {\r\n        // pridani notifikace do db\r\n        const newNotificatons = await axios.post(changePath(`/notifications/addNotification`), { senderId: user._id, recieverId, type, url, idOfPost, text });\r\n        // pridani notifikace do socket.io serveru\r\n        socket.emit(\"sendNotification\", { id: newNotificatons.data._id, senderId: user._id, recieverId, type, url, idOfPost, readed: false, text });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Profile\">\r\n            <TopBarHome />\r\n            <TopProfile urlOfProfileImg={urlOfProfileImg} urlOfCoverImg={urlOfCoverImg} user={currentUser} removeFriend={removeFriend} ifAreFriends={ifAreFriends} myUser={myUser} idOfUser={idOfUser} addOrRemoveRequestToUser={addOrRemoveRequestToUser} ifSendRequest={ifSendRequest} confirmRequest={confirmRequest} />\r\n\r\n            <div className=\"profileContainer\">\r\n                <div className=\"profileAllAboutContainer\">\r\n                    {\r\n                        idOfUser === user._id &&\r\n                        <>\r\n                            <div className=\"buttonSettingsContainer\">\r\n                                <Link to=\"/settings\" className=\"buttonLogOut opacity\" style={{ backgroundColor: backgroundColor1, color: backgroundColor4, textDecoration: \"none\", fontSize: \"13.33px\", padding: \"12px\", borderRadius: \"10px\", margin: \"0px 0px 15px 0px\" }}>nasatvení profilu</Link>\r\n                            </div>\r\n                            <ProfileRequests confirmRequest={confirmRequest} idOfRequests={arrayIdOfFriends} myId={user._id} />\r\n                        </>\r\n                    }\r\n                    <div className=\"profileAllAbout\">\r\n                        {\r\n                            idOfUser === user._id\r\n                                ?\r\n                                <ImagesOfUser user={myUser} />\r\n                                :\r\n                                <ImagesOfUser user={currentUser} />\r\n                        }\r\n\r\n                        <div className=\"profileInfo\">\r\n                            {\r\n                                idOfUser === user._id\r\n                                    ?\r\n                                    <UserInfo user={myUser} />\r\n                                    :\r\n                                    <UserInfo user={currentUser} />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"friendsContainer\">\r\n                        <span>pratele</span>\r\n                        <SwiperOnlineFriends users={allFriends} type={1} classBorderRadius={\"borderRadiusSwiperOnline\"} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"postsActionsContainerProfile\">\r\n                    {idOfUser === user._id && <AddNewPost friends={allFriends} />}\r\n                    {\r\n                        allPosts?.map((post, index) => (\r\n                            <Post post={post} key={index} userOfPost={usersIdOfPost.filter(user => user._id === post.userId)[0]} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <Notifications />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nconst ColorsPicker = ({ text, color, setColor, setNoError, setNoErrorDefaultButton }) => {\r\n    const { backgroundColor1, backgroundColor3 } = useContext(GlobalContext);\r\n    return (\r\n        <div className=\"ColorsPicker\">\r\n            <span style={{ color: backgroundColor3 }}>{text}</span>\r\n            <input type=\"color\" className=\"pointer\" style={{ backgroundColor: backgroundColor1, borderRadius: \"5px\" }} value={color} onChange={ ( e ) => { setColor(e.target.value); setNoError(false); setNoErrorDefaultButton(false) } } />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorsPicker\r\n","import React, { useContext, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport ColorsPicker from './ColorsPicker';\r\nimport axios from 'axios';\r\nimport changePath from '../changePath';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { GoCheck } from 'react-icons/go';\r\n\r\nconst ChangeColors = () => {\r\n    const {user, setColors, backgroundColor1, backgroundColor2, backgroundColor3, backgroundColor4} = useContext(GlobalContext);\r\n\r\n\r\n    // promenne pro barvy \r\n    const [color1, setColor1] = useState(backgroundColor1);\r\n    const [color2, setColor2] = useState(backgroundColor2);\r\n    const [color3, setColor3] = useState(backgroundColor3);\r\n    const [color4, setColor4] = useState(backgroundColor4);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [noError, setNoError] = useState(false);\r\n\r\n    const [isLoadingDefaultButton, setIsLoadingDefaultButton] = useState(false);\r\n    const [noErrorDefaultButton, setNoErrorDefaultButton] = useState(false);\r\n\r\n    const changeColors = async () => {\r\n        setIsLoading(true);\r\n        // zjisteni zda existuje zaznam v tabulce userColors naseho uzivatele\r\n        const userColors = await axios.get(changePath(`/userColors/ifUserColorsExist/${user._id}`));\r\n        if(userColors.data) {\r\n            // jetli ano tak jen atkualizujeme zaznam\r\n            await axios.put(changePath(`/userColors/updateUserColors`), {idOfUser: user._id, backgroundColor1: color1, backgroundColor2: color2, backgroundColor3: color3, backgroundColor4: color4});\r\n        } else {\r\n            // jetli ne tak vyvtorime novy zaznam\r\n            await axios.post(changePath(`/userColors/createUserColors`), {idOfUser: user._id, backgroundColor1: color1, backgroundColor2: color2, backgroundColor3: color3, backgroundColor4: color4});\r\n        }\r\n        // ulozime zaznam do localStorage\r\n        localStorage.setItem(\"colors\", JSON.stringify({backgroundColor1: color1, backgroundColor2: color2, backgroundColor3: color3, backgroundColor4: color4}));\r\n        // ulozime zaznam do context api\r\n        setColors({backgroundColor1: color1, backgroundColor2: color2, backgroundColor3: color3, backgroundColor4: color4});\r\n        setIsLoading(false);\r\n        setNoError(true);\r\n    }\r\n\r\n    // vraceni zakladnich barev\r\n    const changeToDefault = async () => {\r\n        setIsLoadingDefaultButton(true);\r\n        // odstraneni colors z localStorage\r\n        localStorage.removeItem(\"colors\");\r\n        // ulozeni zakladnich barev do context api\r\n        setColors({backgroundColor1: \"#D88100\", backgroundColor2: \"#F4F4F4\", backgroundColor3: \"black\", backgroundColor4: \"#ffffff\"});\r\n\r\n        // zjisteni zda existuje zaznam v tabulce userColors naseho uzivatele\r\n        const userColors = await axios.get(changePath(`/userColors/ifUserColorsExist/${user._id}`));\r\n        userColors.data && await axios.delete(changePath(`/userColors/deleteUserColors/${user._id}`)); // vymazani zaznamu v tabulce userColors\r\n        setIsLoadingDefaultButton(false);\r\n        setNoErrorDefaultButton(true);\r\n        updateValueOfColors();\r\n    }\r\n\r\n    const updateValueOfColors = () => {\r\n        setColor1(\"#D88100\");\r\n        setColor2(\"#F4F4F4\");\r\n        setColor3(\"black\");\r\n        setColor4(\"#ffffff\");\r\n    }\r\n    return (\r\n        <div className=\"ChangeColors\">\r\n            <hr className=\"lineNewPost\" style={{backgroundColor: backgroundColor1, width: \"100%\"}}/>\r\n            <h3 style={{color: backgroundColor1}}>Uprav barvy tvé sociální sítě</h3>\r\n            <ColorsPicker setNoError={setNoError} setNoErrorDefaultButton={setNoErrorDefaultButton} text=\"Hlavní barva\" color={color1} setColor={setColor1} />\r\n            <ColorsPicker setNoError={setNoError} setNoErrorDefaultButton={setNoErrorDefaultButton} text=\"Sekundární barva\" color={color2} setColor={setColor2} />\r\n            <ColorsPicker setNoError={setNoError} setNoErrorDefaultButton={setNoErrorDefaultButton} text=\"barva pro halvní text\" color={color3} setColor={setColor3} />\r\n            <ColorsPicker setNoError={setNoError} setNoErrorDefaultButton={setNoErrorDefaultButton} text=\"barva pro sekundární text\" color={color4} setColor={setColor4} />\r\n            <button onClick={changeColors} className=\"inputImgAddPost opacity\" style={{backgroundColor: backgroundColor1, color: backgroundColor4, margin: \"15px 0px 0px 0px\"}} >{!isLoading ? (noError ? <div className=\"correctAnimation\"><GoCheck size={15} /></div> : \"uložit nastavení\") : <ClipLoader color={backgroundColor4} size={10}></ClipLoader>}</button>\r\n            <span style={{marginTop: \"15px\", color: backgroundColor3}}>nebo</span>\r\n            <button onClick={changeToDefault} className=\"inputImgAddPost opacity\" style={{backgroundColor: backgroundColor1, color: backgroundColor4, margin: \"15px 0px 0px 0px\"}} >{!isLoadingDefaultButton ? (noErrorDefaultButton ? <div className=\"correctAnimation\"><GoCheck size={15} /></div> : \"vrátit do původního stavu\") : <ClipLoader color={backgroundColor4} size={10}></ClipLoader>}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeColors\r\n","import React, { useContext } from 'react';\r\nimport CropperImage from './global/CropperImage';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport changePath from '../changePath';\r\nimport axios from 'axios';\r\nimport { downloadUrlImg, uploadImg } from '../storageImgActions/imgFunctions';\r\n\r\nconst ChangeCoverImg = () => {\r\n    const { user, socket, backgroundColor1, changeCoverImg} = useContext(GlobalContext);\r\n\r\n    const getNewCroppedPicture = async (image, setNoError, setIsLoading, friends, sendNotification) => {\r\n        setIsLoading(true);\r\n        console.log(friends);\r\n        const newImgName = \"users/\" + user.username + \"/\" + image.name + \"\" + Math.floor( Date.now() / 1000 );\r\n        // obrazek se ulozi do storage\r\n        await uploadImg(image, newImgName).then(async() => {\r\n            console.log('upload img succesfully');\r\n            // stahnuti url obrazku\r\n            const urlOfImg = await downloadUrlImg(newImgName);\r\n\r\n            await addNewPhoto(urlOfImg, friends, sendNotification);\r\n            // jestlize pridavame fotku na pozadi\r\n            if(user.idOrUrlOfCoverPicture) {\r\n                // vyhledani stareho obrazku pomoci jeho url \r\n                const oldPhoto = await axios.post(changePath(`/images/getImgByUrl`), {url: user.idOrUrlOfCoverPicture});\r\n                // id nahrazeneho obrazku je ulozeno do \r\n                await axios.put(changePath(\"/users/addPhoto\"), {id: user._id, idOfImg: oldPhoto.data._id});\r\n            }\r\n            // vyhledani naseho uzivatele a ulozeni nove url do zaznamu naseho uzivatele v tabulce users do setNewProfilePicture\r\n            await axios.put(changePath('/users/setNewCoverPicture'), {id: user._id, imgUrl: urlOfImg});\r\n            // zmena obrazku na pozadi v context\r\n            changeCoverImg(urlOfImg);\r\n            // zmena obrazku na pozadi v localStorage\r\n            const userString = localStorage.getItem(\"user\");\r\n            const userObject = JSON.parse(userString);\r\n            userObject.idOrUrlOfCoverPicture = urlOfImg;\r\n            const newUserData = JSON.stringify(userObject);\r\n            localStorage.setItem(\"user\", newUserData);\r\n            setNoError(true);\r\n            setIsLoading(false);\r\n        }) \r\n    }\r\n\r\n    // funkce pro vytvoeni ulozeni prispevku do databaze\r\n    const addNewPhoto = async (img, friends, sendNotification) => {\r\n        try {\r\n            // vytvoreni promenne ve ktere budou data prispevku\r\n            const newPost = { \r\n                userId: user._id, \r\n                urlOfImg: img,\r\n                newPicture: true,\r\n            }\r\n            // kdyz vse probehne v poradku tak se vytvori samotny prispevek v databazi prispevku\r\n            const dataOfNewPost = await axios.post(changePath(\"/posts/addPost\"), newPost);\r\n            \r\n            // vytvoreni noveho zaznamu v tabulce images\r\n            await axios.post(changePath('/images/createNew'), {url: img, idOfPost: dataOfNewPost.data._id});\r\n            \r\n            // vsem nasim pratelum posleme notifikaci\r\n            friends.forEach(async(friend, index) => {\r\n                await sendNotification(friend._id, 6, null, dataOfNewPost.data._id, \"přidal/a novou fotku\");\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <hr className=\"lineNewPost\" style={{backgroundColor: backgroundColor1, width: \"100%\"}}/>\r\n            \r\n            <div className=\"settingsChangeCoverPicture\">\r\n                <h3 style={{color: backgroundColor1}}>Přidej novou fotku na pozadí</h3>\r\n                <img src={user.idOrUrlOfCoverPicture} alt=\"\" referrerPolicy=\"no-referrer\" style={{width: \"80%\", height: \"auto\"}}/>\r\n                <CropperImage aspect={15/2} rect={true} socket={socket} saveImg={getNewCroppedPicture}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangeCoverImg\r\n\r\n","import React, { useContext } from 'react'\r\nimport CropperImage from './global/CropperImage';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport axios from 'axios';\r\nimport changePath from '../changePath';\r\nimport { downloadUrlImg, uploadImg } from '../storageImgActions/imgFunctions';\r\n\r\nconst ChangeProfileImg = () => {\r\n    const { user, backgroundColor1, changeProfileImg } = useContext(GlobalContext);\r\n\r\n    const getNewCroppedPicture = async (image, setNoError, setIsLoading, friends, sendNotification) => {\r\n        setIsLoading(true);\r\n        console.log(friends);\r\n        const newImgName = \"users/\" + user.username + \"/\" + image.name + \"\" + Math.floor( Date.now() / 1000 );\r\n        // obrazek se ulozi do storage\r\n        await uploadImg(image, newImgName).then(async() => {\r\n            console.log('upload img succesfully');\r\n            // stahnuti url obrazku\r\n            const urlOfImg = await downloadUrlImg(newImgName);\r\n\r\n            await addNewPhoto(urlOfImg, friends, sendNotification);\r\n            // jestlize pridavame profilovou fotku\r\n            if(user.idOrUrlOfProfilePicture) {\r\n                // vyhledani stareho obrazku pomoci jeho url \r\n                const oldPhoto = await axios.post(changePath('/images/getImgByUrl'), {url: user.idOrUrlOfProfilePicture});\r\n                // id nahrazeneho obrazku je ulozeno do \r\n                await axios.put(changePath(\"/users/addPhoto\"), {id: user._id, idOfImg: oldPhoto.data._id});\r\n            }\r\n            \r\n\r\n            // vyhledani naseho uzivatele a ulozeni nove url do zaznamu naseho uzivatele v tabulce users do setNewProfilePicture\r\n            await axios.put(changePath('/users/setNewProfilePicture'), {id: user._id, imgUrl: urlOfImg});\r\n            // zmena profiloveho obrazku v context\r\n            changeProfileImg(urlOfImg);\r\n            // zmena profiloveho obrazku v localStorage\r\n            const userString = localStorage.getItem(\"user\");\r\n            const userObject = JSON.parse(userString);\r\n            userObject.idOrUrlOfProfilePicture = urlOfImg;\r\n            const newUserData = JSON.stringify(userObject);\r\n            localStorage.setItem(\"user\", newUserData);\r\n            setIsLoading(false);\r\n            setNoError(true);\r\n        }) \r\n    }\r\n\r\n    // funkce pro vytvoeni ulozeni prispevku do databaze\r\n    const addNewPhoto = async (img, friends, sendNotification) => {\r\n        try {\r\n            // vytvoreni promenne ve ktere budou data prispevku\r\n            const newPost = { \r\n                userId: user._id, \r\n                urlOfImg: img,\r\n                newPicture: true,\r\n            }\r\n            // kdyz vse probehne v poradku tak se vytvori samotny prispevek v databazi prispevku\r\n            const dataOfNewPost = await axios.post(changePath(\"/posts/addPost\"), newPost);\r\n            \r\n            // vytvoreni noveho zaznamu v tabulce images\r\n            await axios.post(changePath('/images/createNew'), {url: img, idOfPost: dataOfNewPost.data._id});\r\n            \r\n            // vsem nasim pratelum posleme notifikaci\r\n            friends.forEach(async(friend, index) => {\r\n                await sendNotification(friend._id, 6, null, dataOfNewPost.data._id, \"přidal/a novou fotku\");\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"settingsChangeProfilePicture\">\r\n            <h3 style={{color: backgroundColor1}}>Přidej novou profilovou fotku</h3>\r\n            <img src={user.idOrUrlOfProfilePicture ? user.idOrUrlOfProfilePicture : \"/img/anonymous.png\"} alt=\"\" referrerPolicy=\"no-referrer\" style={{width: \"120px\", height: \"120px\", borderRadius: \"50%\"}}/>\r\n            <CropperImage aspect={5/5} rect={false} saveImg={getNewCroppedPicture}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangeProfileImg\r\n","import axios from 'axios';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { GoCheck } from 'react-icons/go';\r\n\r\nconst SetUserInfo = () => {\r\n    const { user, backgroundColor1, backgroundColor2, backgroundColor4 } = useContext(GlobalContext);\r\n\r\n    const [ifLoading, setIfLoading] = useState(false);\r\n    const [infoData, setInfoData] = useState([]);\r\n\r\n    // zda se nenastala zadna chyba\r\n    const [noError, setNoError] = useState(false);\r\n\r\n    const desc = useRef();\r\n    const from = useRef();\r\n    const relationShip = useRef();\r\n\r\n    useEffect(() => {\r\n        const getInfo = async () => {\r\n            const info = await axios.get(changePath(`/userinfos/getUserInfo/${user._id}`));\r\n            setInfoData(info.data);\r\n            console.log(info.data)\r\n        }\r\n        getInfo();\r\n    }, [user._id]);\r\n    const saveNewInfo = async () => {\r\n        setIfLoading(true);\r\n        const ifInfoExist = await axios.post(changePath(\"/userInfos/ifInfoExist\"), {id: user._id});\r\n        const dataInfo = {\r\n            idOfUser: user._id, \r\n            desc: desc.current.value, \r\n            from: from.current.value, \r\n            relationShip: relationShip.current.value\r\n        }\r\n\r\n        if(ifInfoExist.data) {\r\n            // aktulalizovani zaznamu userInfo\r\n            await axios.put(changePath(\"/userInfos/updateInfo\"), dataInfo).then(() => {\r\n                setIfLoading(false);\r\n                setNoError(true);\r\n            });\r\n        } else {\r\n            // vytvoreni zaznamu userInfo\r\n            console.log(dataInfo);\r\n            await axios.post(changePath(\"/userInfos/createUserInfo\"), dataInfo).then(() => {\r\n                setIfLoading(false);\r\n                setNoError(true);\r\n            });\r\n        }\r\n    }\r\n\r\n    const changeInput = () => {\r\n        setInfoData(null);\r\n        setNoError(false);\r\n    }\r\n    return (\r\n        <>\r\n            <hr className=\"lineNewPost\" style={{backgroundColor: backgroundColor1, width: \"100%\"}}/>\r\n            <div className=\"SetUserInfo\">\r\n                \r\n                <h3 style={{color: backgroundColor1}}>Info</h3>\r\n                <input type=\"text\" className=\"inputInfo\" style={{backgroundColor: backgroundColor2, color: backgroundColor1}} value={infoData && infoData.desc} onChange={changeInput} placeholder=\"popis...\" ref={desc} />\r\n                <input type=\"text\" className=\"inputInfo\" style={{backgroundColor: backgroundColor2, color: backgroundColor1}} value={infoData && infoData.from} onChange={changeInput} placeholder=\"býdlíte v...\" ref={from} />\r\n                <select className=\"inputInfo\" style={{backgroundColor: backgroundColor2, color: backgroundColor1}} ref={relationShip} onChange={changeInput} value={infoData && infoData.relationShip}>\r\n                    <option value=\"\">-</option>\r\n                    <option value=\"nezadaný/á\">nezadaný/á</option>\r\n                    <option value=\"zadaný/á\">zadaný/á</option>\r\n                    <option value=\"zasnoubený/á\">zasnoubený/á</option>\r\n                    <option value=\"ženatý/á\">ženatý/á</option>\r\n                    <option value=\"rozvedený/á\">rozvedený/á</option>\r\n                </select>\r\n                <button className=\"buttonSetInfo opacity\" onClick={saveNewInfo} style={{backgroundColor: backgroundColor1, color: backgroundColor4}}>{ifLoading ? <ClipLoader color={backgroundColor4} size={10}></ClipLoader> : noError ? <div className=\"correctAnimation\"><GoCheck size={15} /></div> : \"uložit nastavení\"}</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SetUserInfo\r\n","\r\nimport React from 'react'\r\nimport ChangeColors from '../components/ChangeColors';\r\nimport ChangeCoverImg from '../components/ChangeCoverImg';\r\nimport ChangeProfileImg from '../components/ChangeProfileImg';\r\nimport Notifications from '../components/Notifications';\r\nimport SetUserInfo from '../components/SetUserInfo';\r\nimport TopBarHome from '../components/TopBarHome'\r\n\r\nconst ProfileSettings = () => { \r\n    return (\r\n        <div className=\"ProfileSettings\">\r\n            <TopBarHome />\r\n            <div className=\"ProfileSettingsContainer\">\r\n                <ChangeProfileImg />\r\n                <ChangeCoverImg />   \r\n                <SetUserInfo /> \r\n                <ChangeColors />\r\n            </div>\r\n            <Notifications />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileSettings\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { motion } from 'framer-motion';\r\nimport { AiOutlineCheckCircle } from 'react-icons/ai';\r\nimport axios from 'axios';\r\nimport changePath from '../changePath';\r\nimport { FcLikePlaceholder, FcLike } from \"react-icons/fc\";\r\n\r\nconst Message = ({ message, userOfChat, idOfReadedMessage }) => {\r\n    const { user, backgroundColor1, backgroundColor2, backgroundColor3 } = useContext(GlobalContext);\r\n    const [date, setDate] = useState();\r\n\r\n    // promenna pro pocet liku\r\n    const [lenghtOfLikes, setLenghtOfLikes] = useState(message?.idOfLikes?.length || []);\r\n\r\n    // promenna zdali jsem prispevek likenul\r\n    const [ifIsLiked, setIfIsLiked] = useState(message?.idOfLikes?.includes(user._id));\r\n\r\n    useEffect(() => {\r\n        setDate(new Date(message.createdAt));\r\n    }, [message])\r\n\r\n    // pridani nebo odebrani likeu\r\n    const addOrRemoveLike = async () => {\r\n        ifIsLiked ? setLenghtOfLikes(lenght => lenght - 1) : setLenghtOfLikes(lenght => lenght + 1);\r\n        setIfIsLiked(!ifIsLiked);\r\n        await axios.put(changePath(`/messages/addOrRemoveLike/${message._id}`), { userId: user._id });\r\n        console.log(\"hotovo\");\r\n    }\r\n\r\n    return (\r\n        message.idOfSender === user._id ?\r\n            <>\r\n                <motion.div onDoubleClick={addOrRemoveLike} className={idOfReadedMessage === message._id ? \"marginBottom myMessage\" : \"myMessage\"}\r\n                    initial={{ scale: 0.2 }}\r\n                    animate={{ scale: 1 }}\r\n                >\r\n                    <div className=\"myMessageTimeMessage\">\r\n                        {message.text && <div className=\"textInMessage\" style={{ backgroundColor: backgroundColor1 }} >{message.text}</div>}\r\n                        {message.urlOfVoice && <audio controls src={message.urlOfVoice}></audio>}\r\n                        {message.urlOfImg && <img className='imgInMessage' src={message.urlOfImg} />}\r\n                        {message.urlOfVideo && <video className='videoInMessage' controls src={message.urlOfVideo}></video>}\r\n                        <span style={{ textAlign: \"right\" }}>{(Date.now() - (date?.getTime())) / 3600000 > 24 && `${date?.getDate()}.${date?.getMonth()}.`} {date?.getHours()}:{date?.getMinutes()}</span>\r\n                        {lenghtOfLikes > 0 && (ifIsLiked ? <div className='likesOfMessage'><FcLike style={{ cursor: \"pointer\" }} className=\"scaled icon\" onClick={addOrRemoveLike} />{lenghtOfLikes}</div> : <div className='likesOfMessage'><FcLikePlaceholder className=\"scaled icon\" style={{ cursor: \"pointer\" }} onClick={addOrRemoveLike} />{lenghtOfLikes}</div>)}\r\n                    </div>\r\n                </motion.div>\r\n                {!message.readed && <div className='profileImgReadedContainer'><AiOutlineCheckCircle className=\"profileImgInMessageReaded\" /></div>}\r\n                {idOfReadedMessage === message._id && <div className='profileImgReadedContainer'><img className=\"profileImgInMessageReaded alwaysRight\" src={userOfChat?.idOrUrlOfProfilePicture || \"/img/anonymous.png\"} alt=\"\" /></div>}\r\n            </>\r\n            :\r\n            <>\r\n                <motion.div onDoubleClick={addOrRemoveLike} className={idOfReadedMessage === message._id ? \"marginBottom yourMessage\" : \"yourMessage\"}\r\n                    initial={{ scale: 0.2 }}\r\n                    animate={{ scale: 1 }}\r\n                >\r\n                    <img className=\"profileImgInMessage\" src={userOfChat?.idOrUrlOfProfilePicture || \"/img/anonymous.png\"} alt=\"\" />\r\n                    <div className=\"yourMessageTimeMessage\">\r\n                        {message.text && <div className=\"textInMessage\" style={{ backgroundColor: backgroundColor2, color: backgroundColor3 }} >{message.text}</div>}\r\n                        {message.urlOfVoice && <audio controls src={message.urlOfVoice}></audio>}\r\n                        {message.urlOfImg && <img className='imgInMessage' src={message.urlOfImg} />}\r\n                        {message.urlOfVideo && <video className='videoInMessage' controls src={message.urlOfVideo}></video>}\r\n                        <span style={{ color: backgroundColor1 }}>{(Date.now() - (date?.getTime())) / 3600000 > 24 && `${date?.getDate()}.${date?.getMonth()}.`} {date?.getHours()}:{date?.getMinutes()}</span>\r\n                        {lenghtOfLikes > 0 && (ifIsLiked ? <div className='likesOfMessage'><FcLike style={{ cursor: \"pointer\" }} className=\"scaled icon\" onClick={addOrRemoveLike} />{lenghtOfLikes}</div> : <div className='likesOfMessage'><FcLikePlaceholder className=\"scaled icon\" style={{ cursor: \"pointer\" }} onClick={addOrRemoveLike} />{lenghtOfLikes}</div>)}\r\n                    </div>\r\n                </motion.div>\r\n                {idOfReadedMessage === message._id && <div className='profileImgReadedContainer'><img className=\"profileImgInMessageReaded alwaysRight\" src={userOfChat?.idOrUrlOfProfilePicture || \"/img/anonymous.png\"} alt=\"\" /></div>}\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Message","import React, { useContext, useState } from 'react'\r\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder'\r\nimport { GlobalContext } from '../../context/GlobalState';\r\nimport { MdKeyboardVoice } from 'react-icons/md';\r\n\r\nconst VoiceMessage = ({ setUrlOfVoice }) => {\r\n    const { backgroundColor1, backgroundColor4 } = useContext(GlobalContext);\r\n\r\n    const [recordState, setRecordState] = useState();\r\n\r\n    const start = () => {\r\n        setRecordState(RecordState.START);\r\n    }\r\n    const stop = () => {\r\n        setRecordState(RecordState.STOP);\r\n    }\r\n    const onStop = async (audioData) => {\r\n        console.log(audioData);\r\n        setUrlOfVoice(audioData);\r\n    }\r\n\r\n    return (\r\n        <div className='VoiceMessage'>\r\n            <AudioReactRecorder state={recordState} onStop={onStop} className=\"audioRecorder\" />\r\n            {recordState == \"start\" ? <button className='buttonsForVariantsMessage opacity' style={{ color: backgroundColor4, backgroundColor: backgroundColor1 }} onClick={stop}>stop</button> : <button className='buttonsForVariantsMessage opacity' style={{ color: backgroundColor4, backgroundColor: backgroundColor1 }} onClick={start}><MdKeyboardVoice className='reactIcon' /></button>}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default VoiceMessage","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { MdArrowBack } from 'react-icons/md'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Message from './Message';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport VoiceMessage from './addMessageVariants/VoiceMessage';\r\nimport { TiDelete } from 'react-icons/ti';\r\nimport { downloadUrlImg, uploadImg } from '../storageImgActions/imgFunctions';\r\nimport VideoMessage from './addMessageVariants/VideoMessage';\r\nimport PhotoMessage from './addMessageVariants/PhotoMessage';\r\nimport EmojiPicker from './addMessageVariants/EmojiPicker';\r\n\r\nconst Chat = ({ userOfChat, idOfChat, setChats, chats }) => {\r\n    const { user, setNumberOfNewMessages, socket, onlineFriends, backgroundColor1, backgroundColor2, backgroundColor4 } = useContext(GlobalContext);\r\n    const history = useHistory();\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const [isOnline, setIsOnline] = useState();\r\n    const [messages, setMessages] = useState([]);\r\n    const [idOfLastReadedMessage, setIdOfLastReadedMessage] = useState();\r\n\r\n    const [valOfText, setValOfText] = useState(\"\");\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // urls\r\n    const [voiceFile, setVoiceFile] = useState(null);\r\n    const [videoFile, setVideoFile] = useState(null);\r\n    const [photoFile, setPhotoFile] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setMessages([]);\r\n        const getMessages = async () => {\r\n            const messages = await axios.get(changePath(`/messages/getAllMessages/${idOfChat}`));\r\n            var DataOfMessages = messages.data;\r\n            for (var index = 0; index < DataOfMessages.length; index++) {\r\n                if (DataOfMessages[index].idOfReciever === user?._id) DataOfMessages[index].readed = true;\r\n            }\r\n            setMessages(DataOfMessages);\r\n            sortMessagesByDate();\r\n        }\r\n        getMessages();\r\n    }, [idOfChat]);\r\n\r\n    // nastaveni id podledni prectene zpravy a poslani cez socket druhemu uzivatelovi precteni zpravy\r\n    useEffect(() => {\r\n        for (var index = 0; index < messages.length; index++) {\r\n            if (!messages[index].readed && messages[index].idOfSender === user?._id) {\r\n                setIdOfLastReadedMessage(messages[index - 1]?._id);\r\n                socket?.emit(\"setReadedMessage\", { idOfMessage: messages[index - 1]?._id, idOfUser: userOfChat?._id, idOfChat: idOfChat });\r\n                break;\r\n            } else {\r\n                if (index == messages.length - 1) {\r\n                    setIdOfLastReadedMessage(messages[index]._id);\r\n                    socket?.emit(\"setReadedMessage\", { idOfMessage: messages[index]._id, idOfUser: userOfChat?._id, idOfChat: idOfChat });\r\n                }\r\n            }\r\n        }\r\n    }, [messages])\r\n\r\n    // precteni zprav\r\n    useEffect(() => {\r\n        readedMessages();\r\n    }, [userOfChat])\r\n    const readedMessages = async () => {\r\n        await axios.put(changePath(`/messages/setReadedAllMessage`), { idOfChat: idOfChat, idOfSender: userOfChat?._id });\r\n        socket?.emit(\"setReadedMessage\", { idOfMessage: null, idOfUser: userOfChat?._id, idOfChat: idOfChat });\r\n        const newData = await axios.post(changePath(`/messages/getNumberOfUnreadedMessagesInMessenger`), { myId: user._id });\r\n        setNumberOfNewMessages(newData.data);\r\n    }\r\n    // precteni zpravy \r\n    useEffect(() => {\r\n        socket?.on(\"getMessage\", async (data) => {\r\n            var idOfCurrentChat = window.location.href.split('/')[5]; // useParams nefunguje v socket.io proto jsem zvolil tuto moznost ziskani parametru v url adrese\r\n            if (data.idOfChat === idOfCurrentChat) { // jestli se id shoduje s nasim otevrenym chatem\r\n                await readedMessages();\r\n            }\r\n        })\r\n    }, [socket, userOfChat])\r\n\r\n    useEffect(() => {\r\n        setIsOnline(onlineFriends?.some(onlineUser => onlineUser.userId === userOfChat?._id));\r\n    }, [onlineFriends, userOfChat, idOfChat]);\r\n\r\n    // prihlaseni k socketu\r\n    useEffect(() => {\r\n        socket?.on(\"getMessage\", async (data) => {\r\n            var idOfCurrentChat = window.location.href.split('/')[5]; // useParams nefunguje v socket.io proto jsem zvolil tuto moznost ziskani parametru v url adrese\r\n            if (data.idOfChat === idOfCurrentChat) { // jestli se id shoduje s nasim otevrenym chatem\r\n                data.readed = true;\r\n                setMessages((prev) => [...prev, data]);\r\n                socket?.emit(\"setReadedMessage\", { idOfMessage: data._id, idOfUser: data.idOfSender, idOfChat: data.idOfChat });\r\n                sortMessagesByDate();\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket?.on(\"getReadedMessage\", (data) => {\r\n            var idOfCurrentChat = window.location.href.split('/')[5]; // useParams nefunguje v socket.io proto jsem zvolil tuto moznost ziskani parametru v url adrese\r\n            if (data.idOfChat === idOfCurrentChat) {\r\n                setMessages(messages => {\r\n                    var DataOfMessages = messages;\r\n                    for (var index = 0; index < DataOfMessages.length; index++) {\r\n                        DataOfMessages[index].readed = true;\r\n                        if (DataOfMessages[index]._id === data._id && data._id) break;\r\n                    }\r\n                    setIdOfLastReadedMessage(data._id || DataOfMessages[DataOfMessages.length - 1]?._id);\r\n                    return DataOfMessages;\r\n                });\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n\r\n    const addMessage = async () => {\r\n        if (valOfText == \"\" && !voiceFile && !photoFile && !videoFile) {\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n        setLoading(true);\r\n        // voice \r\n        const voiceName = voiceFile && await uploadFileMessage(voiceFile.blob);\r\n        const voiceUrl = voiceName && await downloadUrlImg(voiceName);\r\n        // img\r\n        const photoName = photoFile && await uploadFileMessage(photoFile);\r\n        const photoUrl = photoName && await downloadUrlImg(photoName);\r\n        // img\r\n        const videoName = videoFile && await uploadFileMessage(videoFile);\r\n        const videoUrl = videoName && await downloadUrlImg(videoName);\r\n\r\n        // video\r\n        var newChat = [];\r\n        var newMessage;\r\n        if (idOfChat == '0') {\r\n            newChat = await axios.post(changePath('/chats/createChat'), { usersId: [userOfChat._id, user._id], lastMessage: valOfText, lastMessageTime: Date.now(), lastIdOfUser: user._id });\r\n            newMessage = await axios.post(changePath(`/messages/addMessage`), { idOfSender: user._id, idOfReciever: userOfChat._id, idOfChat: newChat.data._id, text: valOfText, urlOfVoice: voiceUrl, urlOfImg: photoUrl, urlOfVideo: videoUrl });\r\n            setMessages((prev) => [...prev, newMessage.data]);\r\n            sortMessagesByDate();\r\n            setValOfText(\"\");\r\n            setVoiceFile(null);\r\n            setPhotoFile(null);\r\n            setVideoFile(null);\r\n            setLoading(false);\r\n        } else {\r\n            newMessage = await axios.post(changePath(`/messages/addMessage`), { idOfSender: user._id, idOfReciever: userOfChat._id, idOfChat: idOfChat, text: valOfText, urlOfVoice: voiceUrl, urlOfImg: photoUrl, urlOfVideo: videoUrl });\r\n            setMessages((prev) => [...prev, newMessage.data]);\r\n            sortMessagesByDate();\r\n            setValOfText(\"\");\r\n            setPhotoFile(null);\r\n            setVoiceFile(null);\r\n            setVideoFile(null);\r\n            setLoading(false);\r\n            // kdyz uz existuje chat tak aktualizujeme lastMessage jak na backendu tak na frontendu\r\n            await axios.put(changePath('/chats/setLastMessage'), { id: idOfChat, lastMessage: valOfText, lastMessageTime: Date.now(), readed: false, lastIdOfUser: user._id });\r\n            updateChats();\r\n        }\r\n        // zavolani socketu\r\n        socket?.emit(\"sendMessage\", { idOfMessage: newMessage.data._id, idOfSender: user._id, idOfReciever: userOfChat._id, idOfChat: idOfChat, text: valOfText, urlOfVoice: voiceUrl, urlOfImg: photoUrl, urlOfVideo: videoUrl });\r\n        idOfChat == '0' && history.push(`/messenger/${userOfChat._id}/${newChat.data._id}`);\r\n    }\r\n\r\n    const updateChats = () => {\r\n        var newChats = [...chats];\r\n        newChats.filter(chat => chat._id === idOfChat)[0].lastMessageTime = Date.now();\r\n        newChats.filter(chat => chat._id === idOfChat)[0].readed = true;\r\n        newChats.filter(chat => chat._id === idOfChat)[0].readed = true;\r\n        setChats(newChats);\r\n    }\r\n\r\n\r\n\r\n    const sortMessagesByDate = () => {\r\n        setMessages((prev) => [...prev.sort((p1, p2) => { return new Date(p1.createdAt) - new Date(p2.createdAt) })]);\r\n        scrollToDown();\r\n    }\r\n\r\n    const scrollToDown = () => {\r\n        var div = document.getElementsByClassName(\"messagesContainer\")[0];\r\n        try {\r\n            div.scrollTop = div?.scrollHeight;\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    // funkce pro ukladani do uloziste\r\n    const uploadFileMessage = async (file, typeOf) => {\r\n        const newFileMessageName = \"messenger/\" + user.username + \"/\" + (typeOf ? file.size : file.name) + \"\" + Math.floor(Date.now() / 1000);\r\n        await uploadImg(file, newFileMessageName).then(async () => {\r\n            console.log('file message upload succesfully');\r\n        })\r\n        return newFileMessageName;\r\n    }\r\n\r\n    return (\r\n        <div className='Chat'>\r\n            <div className=\"userChat\" style={{ backgroundColor: backgroundColor4 }}>\r\n                <div className=\"mainDivImgChat\">\r\n                    <img src={userOfChat?.idOrUrlOfProfilePicture || \"/img/anonymous.png\"} className=\"imgOfUserChat\" alt=\"\" />\r\n                    {isOnline && <div className=\"online\" style={{ border: \"2px solid \" + backgroundColor4 }} />}\r\n                </div>\r\n                <span>{userOfChat?.username}</span>\r\n            </div>\r\n            <Link to={`/messenger/${user._id}/0`} className='backChatArrow'><MdArrowBack style={{ color: backgroundColor1 }} /></Link>\r\n            <div className='messagesContainer'>\r\n                <AnimatePresence\r\n                    initial={false}\r\n                    // exitBeforeEnter={true}\r\n                    onExitComplete={() => null}\r\n                >\r\n                    {\r\n                        messages?.map((message) => (\r\n                            <Message idOfReadedMessage={idOfLastReadedMessage} message={message} key={message._id} userOfChat={userOfChat} />\r\n                        ))\r\n                    }\r\n                </AnimatePresence>\r\n            </div>\r\n            <div className='addMessageContainer' onKeyPress={(event) => event.key == 'Enter' && addMessage(null)}>\r\n                <div className='leftDiv'>\r\n                    <div className='actionsButton'>\r\n                        <VoiceMessage setUrlOfVoice={setVoiceFile} />\r\n                        <VideoMessage setVideoFile={setVideoFile} />\r\n                        <PhotoMessage setPhotoFile={setPhotoFile} />\r\n                    </div>\r\n                    {\r\n                        !photoFile && !voiceFile && !videoFile\r\n                            ?\r\n                            <input type=\"text\" placeholder='zadej text...' onChange={(e) => setValOfText(e.target.value)} value={valOfText} className={error ? \"error inputForTextInMessenger\" : \"noError inputForTextInMessenger\"} />\r\n                            :\r\n                            <div className='smallExampleDiv'>\r\n                                <div className='smallExampleMainContainer'>\r\n                                    {\r\n                                        photoFile &&\r\n                                        <div className='smallExampleContainer'>\r\n                                            <img className='smallExample' src={URL.createObjectURL(photoFile)} alt=\"\" />\r\n                                            <TiDelete className=\"removeImgShow scaled\" onClick={() => { setPhotoFile(null) }} />\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        videoFile &&\r\n                                        <div className='smallVoiceExampleContainer'>\r\n                                            <video className='videoSmallExample' controls src={URL.createObjectURL(videoFile)}>\r\n                                            </video>\r\n                                            <TiDelete className=\"removeImgShow scaled\" onClick={() => { setVideoFile(null) }} />\r\n                                        </div>\r\n                                    }\r\n                                    {\r\n                                        voiceFile &&\r\n                                        <div className='smallVoiceExampleContainer'>\r\n                                            <audio className='audioSmallExample' controls src={voiceFile.url}></audio>\r\n                                            <TiDelete className=\"removeImgShow scaled\" onClick={() => { setVoiceFile(null) }} />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <input type=\"text\" placeholder='zadej text...' onChange={(e) => setValOfText(e.target.value)} value={valOfText} style={{ width: \"auto\" }} className={error ? \"error inputForTextInMessenger\" : \"noError inputForTextInMessenger\"} />\r\n\r\n                            </div>\r\n                    }\r\n                </div>\r\n                <EmojiPicker setValOfText={setValOfText} />\r\n                <button style={{ backgroundColor: backgroundColor1 }} className='buttonsForVariantsMessage opacity' onClick={() => addMessage(null)} >{!loading ? <AiOutlineSend style={{ fontSize: \"19px\" }} /> : <ClipLoader color={backgroundColor2} size={10} />}</button>\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Chat","import axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { format, register } from 'timeago.js';\r\nimport changePath from '../changePath';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport czDataFormat from '../format.jsCZ/CzFormat';\r\n\r\nconst UserChat = ({ users, chat, idOfActiveChat, chats, setChats }) => {\r\n    // registrovani cestiny do formatjs\r\n    register('myLanguage', czDataFormat);\r\n\r\n    const { user, socket, numberOfNewMessages, setNumberOfNewMessages, onlineFriends, backgroundColor1, backgroundColor2, backgroundColor4 } = useContext(GlobalContext);\r\n\r\n    const [userOfChat, setUserOfChat] = useState(null);\r\n    const [isOnline, setIsOnline] = useState();\r\n\r\n    const [currentChat, setcurrentChat] = useState();\r\n    const [numberUnReadedMessages, setNumberUnReadedMessages] = useState(0);\r\n\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        const currentUser = users?.filter(user => chat?.usersId.includes(user?._id))[0];\r\n        setIsOnline(onlineFriends?.some(onlineUser => onlineUser?.userId === currentUser?._id));\r\n        setUserOfChat(currentUser);\r\n    }, [users, chat, onlineFriends])\r\n\r\n    useEffect(() => {\r\n        const getNewMessages = async () => {\r\n            const numberMessages = await axios.post(changePath(`/messages/getNumberOfUnreadedMessages`), { idOfChat: chat._id, myId: user._id });\r\n            setNumberUnReadedMessages(numberMessages.data.length);\r\n        }\r\n        getNewMessages();\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket?.on(\"getMessage\", async (data) => {\r\n            // jestli se nachazi chat se stejnym id jako v socketu\r\n            if (chats?.some(chatData => chatData?._id == data.idOfChat)) {\r\n                var newChats = [...chats];\r\n                newChats.filter(chatData => chatData._id === data.idOfChat)[0].lastMessage = data.text;\r\n                newChats.filter(chatData => chatData._id === data.idOfChat)[0].lastIdOfUser = data.idOfSender;\r\n                if (data.idOfChat === window.location.href.split('/')[5] && data.idOfChat === chat._id) { // jetli dany chat mame otevreny\r\n                    newChats.filter(chatData => chatData._id === data.idOfChat)[0].readed = true;\r\n                    setNumberUnReadedMessages(0);\r\n                    setChats(newChats);\r\n                    await axios.put(changePath('/chats/updateReaded'), { id: chat._id, readed: true });\r\n                } else {\r\n                    if (data.idOfChat === chat._id) newChats.filter(chatData => chatData._id === data.idOfChat)[0].readed = false;\r\n                    ((data.idOfReciever === user._id) && (chat._id === data.idOfChat)) && setNumberUnReadedMessages(number => number + 1);\r\n                    setChats(newChats);\r\n                }\r\n            }\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        setcurrentChat(chats.filter(item => item._id === chat._id)[0]);\r\n    }, [chat, chats])\r\n\r\n    const goToChat = async () => {\r\n        await updateChatReadedTrue();\r\n        history.push(`/messenger/${userOfChat?._id}/${chat._id}`);\r\n    }\r\n\r\n    const updateChatReadedTrue = async () => {\r\n        setNumberUnReadedMessages(0);\r\n        setNumberOfNewMessages(numberOfNewMessages - numberUnReadedMessages);\r\n        var newChats = [...chats];\r\n        if (!newChats.filter(currentChat => currentChat._id === chat._id)[0].readed) {\r\n            newChats.filter(currentChat => currentChat._id === chat._id)[0].readed = true;\r\n            setChats(newChats);\r\n            await axios.put(changePath('/chats/updateReaded'), { id: chat._id, readed: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={goToChat} className=\"userChatMain\" style={currentChat?._id === idOfActiveChat ? { backgroundColor: backgroundColor2 } : { backgroundColor: \"white\" }}>\r\n            <div className=\"userChatContainer\">\r\n                <div className=\"mainDivImgChat\">\r\n                    <img src={userOfChat?.idOrUrlOfProfilePicture || \"/img/anonymous.png\"} className=\"imgOfUserChat\" alt=\"\" />\r\n                    {isOnline && <div className=\"online\" style={{ border: \"2px solid \" + backgroundColor4 }} />}\r\n                </div>\r\n                <div className=\"InfoAboutChat\">\r\n                    <span>{userOfChat?.username}</span>\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <span className={(currentChat?.lastIdOfUser !== user._id) ? (currentChat?.readed ? \"lastMessage\" : \"lastMessage unReaded\") : \"lastMessage\"}>{currentChat?.lastMessage.length > 25 ? currentChat?.lastMessage.slice(0, 20) + \"...\" : currentChat?.lastMessage}</span>\r\n                        <span>{format(currentChat?.lastMessageTime, 'myLanguage')}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {numberUnReadedMessages !== 0 && <div className=\"numberOfNewMessages\" style={{ backgroundColor: backgroundColor1 }} ><span>{numberUnReadedMessages}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserChat","import axios from \"axios\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport changePath from \"../changePath\";\r\nimport Chat from \"../components/Chat\";\r\nimport TopBarHome from \"../components/TopBarHome\";\r\nimport UserChat from \"../components/UserChat\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Messenger = () => {\r\n    const { user } = useContext(GlobalContext);\r\n    const { idOfUser, idOfChat } = useParams();\r\n    const [chats, setChats] = useState(null);\r\n    const [searchChats, setsearchChats] = useState([]);\r\n\r\n    const [users, setUsers] = useState(null);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    const [idOfChat2, setIdOfChat2] = useState();\r\n\r\n    useEffect(() => {\r\n        const sortChats = chats?.sort((p1, p2) => { return new Date(p2.lastMessageTime) - new Date(p1.lastMessageTime) });\r\n        setsearchChats(sortChats);\r\n    }, [chats])\r\n\r\n\r\n    useEffect(() => {\r\n        const getFrinends = async () => {\r\n            // nacteni chatu\r\n            const chats = await axios.get(`/chats/getAllChats/${user?._id}`);\r\n            const chatsData = chats.data;\r\n\r\n            //  nacteni uzivatelu\r\n            const usersIdData = [];\r\n            chatsData.forEach(chat => {\r\n                if (chat.usersId.length === 2) {\r\n                    chat.usersId[0] === user._id ? usersIdData.push(chat.usersId[1]) : usersIdData.push(chat.usersId[0]);\r\n                }\r\n            });\r\n\r\n            const uniqueUsersIdData = [...new Set(usersIdData)]; // odstraneni duplicitnich hodnot (id uzivatelu)\r\n            const usersIdChatData = await axios.post(changePath(`/users/getAllUsersData`), { users: uniqueUsersIdData }); // nacteni dat vsech vlastniku postu\r\n            setUsers(usersIdChatData.data);\r\n            setChats(chatsData);\r\n            setsearchChats(chatsData);\r\n        }\r\n        getFrinends();\r\n    }, [idOfChat])\r\n\r\n    useEffect(() => {\r\n        const getCurrentUser = async () => {\r\n            // nacteni uzivatele vlastnika chatu jestli ho uz nemame nacteneho \r\n            if (idOfUser !== user?._id && !users?.filter(user => user?._id === idOfUser)[0]) {\r\n                const newUser = await axios.get(changePath(`/users/getUser/${idOfUser}`));\r\n                setUsers(() => [users, newUser.data]);\r\n                setCurrentUser(newUser.data)\r\n            } else {\r\n                setCurrentUser(users?.filter(user => user?._id === idOfUser)[0]);\r\n            }\r\n        }\r\n        getCurrentUser();\r\n    }, [idOfUser])\r\n\r\n    useEffect(() => {\r\n        if (idOfChat === '0' && idOfUser !== user._id) {\r\n            chats?.forEach(chat => {\r\n                if (chat.usersId.some(id => id === idOfUser)) {\r\n                    setIdOfChat2(chat._id);\r\n                }\r\n            })\r\n        } else {\r\n            setIdOfChat2(null);\r\n        }\r\n    }, [idOfChat, chats, idOfUser])\r\n\r\n    const searchChat = (val) => {\r\n        const findUsers = users.filter(user => user.username.toLowerCase().includes(val.toLowerCase()));\r\n\r\n        const newArrayOfChat = [];\r\n        chats.forEach((chat) => {\r\n            findUsers.forEach((user) => {\r\n                if (chat.usersId.includes(user._id)) {\r\n                    newArrayOfChat.push(chat);\r\n                }\r\n            })\r\n        })\r\n        setsearchChats(newArrayOfChat);\r\n    }\r\n\r\n    //    const sortChatsByDate = () => {\r\n    //         setChats(chats => chats?.sort((p1, p2) => { return new Date(p2.lastMessageTime) - new Date(p1.lastMessageTime) }));\r\n    //     } \r\n\r\n    return (\r\n        <div className=\"messengerContainer\">\r\n            <TopBarHome />\r\n            <div className=\"messengerMain\">\r\n                <div className={idOfUser !== user._id ? \"messengerFriends mobileDiplayNone\" : \"messengerFriends\"}>\r\n                    <input type=\"text\" className=\"searchChat\" placeholder=\"hledej chaty...\" onChange={(e) => { searchChat(e.target.value) }} />\r\n                    {\r\n                        searchChats?.map(chat => (\r\n                            <UserChat chats={chats} setChats={setChats} users={users} chat={chat} key={chat._id} idOfActiveChat={(idOfChat2 && idOfChat == '0') ? idOfChat2 : idOfChat} />\r\n                        ))\r\n                    }\r\n                </div>\r\n                {idOfUser !== user._id && < Chat chats={chats} setChats={setChats} userOfChat={currentUser} idOfChat={(idOfChat2 && idOfChat == '0') ? idOfChat2 : idOfChat} />}\r\n                {idOfUser === user._id && <div className=\"mobileDiplayNone chatNone\" ><h3>není vybrán žádný chat</h3></div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messenger;\r\n","import './App.css';\r\nimport Register from './pages/Register'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Home from './pages/Home';\r\nimport Login from './pages/Login';\r\nimport { GlobalContext } from './context/GlobalState';\r\nimport { useContext, useEffect } from 'react';\r\nimport Profile from './pages/Profile';\r\nimport ProfileSettings from './pages/ProfileSettings';\r\nimport { io } from 'socket.io-client';\r\nimport Messenger from './pages/Messenger';\r\n\r\nfunction App() {\r\n  const { user, setOnlineFriends, setSocket, socket } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    // pripojeni socket.io\r\n    if (user) {\r\n      setSocket(io(\"ws://localhost:8900\"));\r\n    }\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      // zavolani socket.io addUser a poslani hodnoty user.id\r\n\r\n      socket?.emit(\"addUser\", user._id);\r\n      // dostani vsech online uzivatelu\r\n      socket?.on(\"getUsers\", users => {\r\n        console.log(users);\r\n        setOnlineFriends(users.filter(onlineUser => onlineUser.userId !== user._id));\r\n      })\r\n    }\r\n  }, [user, socket]);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {user ? <Home /> : <Redirect to=\"/register\" />}\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            {!user ? <Register /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            {!user ? <Login /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n          <Route path=\"/profile/:idOfUser\">\r\n            {user ? <Profile /> : <Redirect to=\"/register\" />}\r\n          </Route>\r\n          <Route path=\"/settings\">\r\n            {user ? <ProfileSettings /> : <Redirect to=\"/register\" />}\r\n          </Route>\r\n          <Route path=\"/messenger/:idOfUser/:idOfChat\" >\r\n            {user ? <Messenger /> : <Redirect to=\"/register\" />}\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalProvider } from './context/GlobalState';\n\nconst startApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <GlobalProvider>\n        <App />\n      </GlobalProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nif (window.cordova) {\n  document.addEventListener(\"deviceready\", startApp, false);\n} else {\n  startApp();\n}\n\n\n"],"sourceRoot":""}